/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/index"],{

/***/ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _defineProperty; }\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5LmpzP2FkZTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js\n");

/***/ }),

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"__N_SSP\": function() { return /* binding */ __N_SSP; },\n/* harmony export */   \"default\": function() { return /* binding */ Home; }\n/* harmony export */ });\n/* harmony import */ var _Users_diegoacuna_Documents_custom_spain_map_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _south_paw_react_vector_maps__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @south-paw/react-vector-maps */ \"./node_modules/@south-paw/react-vector-maps/dist/react-vector-maps.esm.js\");\n/* harmony import */ var _public_spain_provinces__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../public/spain-provinces */ \"./public/spain-provinces.js\");\n/* harmony import */ var _styles_Home_module_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../styles/Home.module.css */ \"./styles/Home.module.css\");\n/* harmony import */ var _styles_Home_module_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_5__);\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\nvar _jsxFileName = \"/Users/diegoacuna/Documents/custom-spain-map/pages/index.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0,_Users_diegoacuna_Documents_custom_spain_map_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\n\nvar __N_SSP = true;\nfunction Home() {\n  _s();\n\n  var style = {\n    margin: '1rem auto',\n    width: '300px'\n  };\n\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(''),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  var onClick = function onClick(_ref) {\n    var target = _ref.target;\n    var id = target.attributes.id.value;\n    var name = target.attributes.name.value; // If selected includes the id already, remove it - otherwise add it\n\n    setSelected(name);\n  };\n\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n    className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_5___default().container),\n    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_south_paw_react_vector_maps__WEBPACK_IMPORTED_MODULE_3__.VectorMap, _objectSpread(_objectSpread({}, _public_spain_provinces__WEBPACK_IMPORTED_MODULE_4__.default), {}, {\n      layerProps: {\n        onClick: onClick\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n      className: \"province-info\",\n      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n        className: \"heading-wrapper\",\n        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n          className: \"name-heading-wrapper\",\n          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n            className: \"heading name-heading\",\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n          className: \"typology-heading-wrapper\",\n          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n            className: \"heading typology-heading\",\n            children: \"Tipolog\\xEDa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n          className: \"status-heading-wrapper\",\n          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(\"div\", {\n            className: \"heading status-heading\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"18RT5nPrBTPIyYXVolwVU2o0VQI=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvaW5kZXguanM/NDRkOCJdLCJuYW1lcyI6WyJIb21lIiwic3R5bGUiLCJtYXJnaW4iLCJ3aWR0aCIsInVzZVN0YXRlIiwic2VsZWN0ZWQiLCJzZXRTZWxlY3RlZCIsIm9uQ2xpY2siLCJ0YXJnZXQiLCJpZCIsImF0dHJpYnV0ZXMiLCJ2YWx1ZSIsIm5hbWUiLCJzdHlsZXMiLCJzcGFpblByb3ZpbmNlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFHQTtBQUVBOztBQUVlLFNBQVNBLElBQVQsR0FBZ0I7QUFBQTs7QUFDN0IsTUFBTUMsS0FBSyxHQUFHO0FBQUVDLFVBQU0sRUFBRSxXQUFWO0FBQXVCQyxTQUFLLEVBQUU7QUFBOUIsR0FBZDs7QUFENkIsa0JBR0dDLCtDQUFRLENBQUMsRUFBRCxDQUhYO0FBQUEsTUFHdEJDLFFBSHNCO0FBQUEsTUFHWkMsV0FIWTs7QUFLN0IsTUFBTUMsT0FBTyxHQUFHLFNBQVZBLE9BQVUsT0FBZ0I7QUFBQSxRQUFiQyxNQUFhLFFBQWJBLE1BQWE7QUFDOUIsUUFBTUMsRUFBRSxHQUFHRCxNQUFNLENBQUNFLFVBQVAsQ0FBa0JELEVBQWxCLENBQXFCRSxLQUFoQztBQUNBLFFBQU1DLElBQUksR0FBR0osTUFBTSxDQUFDRSxVQUFQLENBQWtCRSxJQUFsQixDQUF1QkQsS0FBcEMsQ0FGOEIsQ0FJOUI7O0FBQ0FMLGVBQVcsQ0FBQ00sSUFBRCxDQUFYO0FBQ0QsR0FORDs7QUFRQSxzQkFDRTtBQUFLLGFBQVMsRUFBRUMsMEVBQWhCO0FBQUEsNEJBQ0UsOERBQUMsbUVBQUQsa0NBQWVDLDREQUFmO0FBQStCLGdCQUFVLEVBQUU7QUFBRVAsZUFBTyxFQUFQQTtBQUFGO0FBQTNDO0FBQUE7QUFBQTtBQUFBO0FBQUEsWUFERixlQUVFO0FBQUE7QUFBQTtBQUFBO0FBQUEsWUFGRixlQUdFO0FBQUssZUFBUyxFQUFDLGVBQWY7QUFBQSw2QkFDRTtBQUFLLGlCQUFTLEVBQUMsaUJBQWY7QUFBQSxnQ0FDRTtBQUFLLG1CQUFTLEVBQUMsc0JBQWY7QUFBQSxpQ0FDRTtBQUFLLHFCQUFTLEVBQUMsc0JBQWY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFERjtBQUFBO0FBQUE7QUFBQTtBQUFBLGdCQURGLGVBSUU7QUFBSyxtQkFBUyxFQUFDLDBCQUFmO0FBQUEsaUNBQ0U7QUFBSyxxQkFBUyxFQUFDLDBCQUFmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREY7QUFBQTtBQUFBO0FBQUE7QUFBQSxnQkFKRixlQU9FO0FBQUssbUJBQVMsRUFBQyx3QkFBZjtBQUFBLGlDQUNFO0FBQUsscUJBQVMsRUFBQyx3QkFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQURGO0FBQUE7QUFBQTtBQUFBO0FBQUEsZ0JBUEY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREY7QUFBQTtBQUFBO0FBQUE7QUFBQSxZQUhGO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxVQURGO0FBbUJEOztHQWhDdUJQLEk7O0tBQUFBLEkiLCJmaWxlIjoiLi9wYWdlcy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFZlY3Rvck1hcCB9IGZyb20gJ0Bzb3V0aC1wYXcvcmVhY3QtdmVjdG9yLW1hcHMnO1xuaW1wb3J0IHsgZ29vZ2xlIH0gZnJvbSAnZ29vZ2xlYXBpcyc7XG5pbXBvcnQga2V5cyBmcm9tICcuLi9rZXlzLmpzb24nO1xuaW1wb3J0IHNwYWluUHJvdmluY2VzIGZyb20gJy4uL3B1YmxpYy9zcGFpbi1wcm92aW5jZXMnO1xuXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4uL3N0eWxlcy9Ib21lLm1vZHVsZS5jc3MnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBIb21lKCkge1xuICBjb25zdCBzdHlsZSA9IHsgbWFyZ2luOiAnMXJlbSBhdXRvJywgd2lkdGg6ICczMDBweCcgfTtcblxuICBjb25zdCBbc2VsZWN0ZWQsIHNldFNlbGVjdGVkXSA9IHVzZVN0YXRlKCcnKTtcblxuICBjb25zdCBvbkNsaWNrID0gKHsgdGFyZ2V0IH0pID0+IHtcbiAgICBjb25zdCBpZCA9IHRhcmdldC5hdHRyaWJ1dGVzLmlkLnZhbHVlO1xuICAgIGNvbnN0IG5hbWUgPSB0YXJnZXQuYXR0cmlidXRlcy5uYW1lLnZhbHVlO1xuXG4gICAgLy8gSWYgc2VsZWN0ZWQgaW5jbHVkZXMgdGhlIGlkIGFscmVhZHksIHJlbW92ZSBpdCAtIG90aGVyd2lzZSBhZGQgaXRcbiAgICBzZXRTZWxlY3RlZChuYW1lKTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuY29udGFpbmVyfT5cbiAgICAgIDxWZWN0b3JNYXAgey4uLnNwYWluUHJvdmluY2VzfSBsYXllclByb3BzPXt7IG9uQ2xpY2sgfX0gLz5cbiAgICAgIDxociAvPlxuICAgICAgPGRpdiBjbGFzc05hbWU9J3Byb3ZpbmNlLWluZm8nPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0naGVhZGluZy13cmFwcGVyJz5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbmFtZS1oZWFkaW5nLXdyYXBwZXInPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2hlYWRpbmcgbmFtZS1oZWFkaW5nJz5Ob21icmU8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ndHlwb2xvZ3ktaGVhZGluZy13cmFwcGVyJz5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdoZWFkaW5nIHR5cG9sb2d5LWhlYWRpbmcnPlRpcG9sb2fDrWE8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nc3RhdHVzLWhlYWRpbmctd3JhcHBlcic+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0naGVhZGluZyBzdGF0dXMtaGVhZGluZyc+U3RhdHVzPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdzcnVuKGNsKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgZ3NhcGkgPSBnb29nbGUuc2hlZXRzKHsgdmVyc2lvbjogJ3Y0JywgYXV0aDogY2wgfSk7XG5cbiAgICBjb25zdCBvcHQgPSB7XG4gICAgICBzcHJlYWRzaGVldElkOiAnMThpdy1YRXFVTVVNbWx5cnAtNVBIZ1FBSVVqenlmSGFYMDE1R0hGX2Z2dEknLFxuICAgICAgcmFuZ2U6ICdEYXRhJ1xuICAgIH07XG5cbiAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCBnc2FwaS5zcHJlYWRzaGVldHMudmFsdWVzLmdldChvcHQpO1xuICAgIGxldCB2YWx1ZXMgPSBbXTtcbiAgICBpZiAocmVzcG9uc2UgJiYgcmVzcG9uc2UuZGF0YSAmJiByZXNwb25zZS5kYXRhLnZhbHVlcykge1xuICAgICAgdmFsdWVzID0gcmVzcG9uc2UuZGF0YS52YWx1ZXM7XG4gICAgfVxuICAgIGNvbnNvbGUubG9nKCd2YWx1ZXMnLCB2YWx1ZXMpO1xuICAgIHJldHVybiB2YWx1ZXM7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUubG9nKGVycik7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFNlcnZlclNpZGVQcm9wcyhjdHgpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBjbGllbnQgPSBuZXcgZ29vZ2xlLmF1dGguSldUKGtleXMuY2xpZW50X2VtYWlsLCBudWxsLCBrZXlzLnByaXZhdGVfa2V5LCBbXG4gICAgICAnaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYXV0aC9zcHJlYWRzaGVldHMucmVhZG9ubHknXG4gICAgXSk7XG5cbiAgICBjb25zdCB0b2tlbnMgPSBhd2FpdCBjbGllbnQuYXV0aG9yaXplKCk7XG4gICAgY29uc29sZS5sb2coJ0Nvbm5lY3RlZCcpO1xuICAgIGdzcnVuKGNsaWVudCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHByb3BzOiB7fVxuICAgIH07XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUubG9nKGVycik7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/index.js\n");

/***/ }),

/***/ "./public/spain-provinces.js":
/*!***********************************!*\
  !*** ./public/spain-provinces.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* module decorator */ module = __webpack_require__.hmd(module);\nvar spainProvinces = {\n  \"id\": \"spain-provinces\",\n  \"name\": \"Spain Provinces\",\n  \"viewBox\": \"0 0 418.45123 468.63733\",\n  \"layers\": [//   {\n  //     \"id\": \"divider\",\n  //     \"name\": \"Divider\",\n  //     \"d\": \"m 346.53737,357.75734 -172.74,0 -65.48,110.63 -4.01,0 65.48,-110.63 -150.14,0 0,-2.82 326.89,0 0,2.82 z\"\n  //   },\n  {\n    \"id\": \"es-a\",\n    \"name\": \"Alicante\",\n    \"d\": \"m 257.39737,204.29734 0.76,0.66 1.31,-0.15 0.83,1.51 3.06,-1.06 0.85,1 1.96,0.24 0.78,1.61 3.4,-2.21 -0.75,-0.95 -0.87,0.52 -0.75,-0.57 -0.37,-0.86 0.49,-0.41 3.24,-0.12 2.22,-1.41 0.61,0.21 2.19,-1.84 2.46,1.1 2.14,-1.33 0.39,1.14 2.38,-1.07 1.12,1.13 -0.11,-1.12 0,0 4.6,1.57 2.68,1.66 -0.31,1.19 1.11,0.35 0.2,1.25 -0.91,0.02 -3.31,2.44 -0.66,0.96 0.31,0.54 -1.07,-0.4 -2.34,0.89 -1.05,1.48 0.42,0.7 -1.47,1.55 -1.57,-0.52 -6.98,3.68 -0.8,1.19 -0.02,2.32 -1.31,-0.41 -2.33,2.86 0.32,3.46 -3.2,1.05 -0.93,2.44 -0.08,4.33 -1.52,1.17 -0.68,2.24 -0.96,0.52 -0.37,1.98 0,0 -2.08,-0.67 -2.15,-2.28 -3.99,-6.75 -0.19,-1.57 1.47,-2.42 0.65,-2.82 -0.66,-1.92 -2.93,-1.01 -0.3,-3.58 2.46,-2.29 -0.38,-0.99 0.76,-1.97 -0.75,-3.24 0,0 1.95,-0.05 1.43,-1.53 -1.4,-3.09 1,-0.35 z\"\n  }, {\n    \"id\": \"es-ab\",\n    \"name\": \"Albacete\",\n    \"d\": \"m 239.71737,179.31734 0.65,-0.19 0.33,1.25 0.63,-0.29 -0.07,1.49 1.25,-0.76 2.39,1.82 0.74,-0.36 4.52,1.29 -0.49,3.89 -2.29,4.17 -0.34,2.17 3.68,4.78 5.75,-0.59 1.07,2.07 -0.14,4.24 0,0 -0.99,0.35 1.4,3.09 -1.44,1.53 -1.95,0.05 0,0 -2.76,-2.14 -0.12,-1.08 -1.96,-0.65 -2.01,0.63 -2.87,2.38 -0.73,-1.05 -1.09,0.51 -1.4,1.64 -0.14,2.65 -1.07,0.72 -0.34,1.22 0.61,6.07 -3.4,2.54 -2.48,-0.04 -0.69,-0.98 0.15,-1.1 -1.71,-0.61 -1.61,0.43 0.36,0.55 -3.79,2.27 -2.41,0.63 -1.93,-0.94 -1.98,2.64 -3.06,1.41 -1.48,3.45 -2.1,1.85 -0.36,1.53 0,0 -2.51,-0.3 -3.92,-1.96 0,0 3.22,-3.92 0.3,-3.39 -1.49,-1.09 0.05,-3.8 -2.7,-0.63 0.15,-2.99 -0.8,-0.79 -2.46,0.55 -2.74,-1.41 0,0 0.47,-0.55 -0.52,-3.17 1.08,0.46 1.83,-1.29 0.95,-3.35 -1.82,-1.91 -1.07,0.06 -0.91,-3.86 -3.71,-2.28 1.55,-3.34 0.68,-0.02 0.15,-2.17 -1.15,-2.19 3.67,-5.14 -0.59,-2.1 0,0 3.78,-0.87 2.09,0.66 1.23,-0.74 4.2,4.32 0.73,-1.79 0.89,-0.22 1,2.25 3.69,-2.15 3.6,0.57 -1.39,-3.64 2.33,0.28 -0.26,0.54 1.2,1.75 3.15,-0.43 3.6,0.95 0.94,-1.6 z\"\n  }, {\n    \"id\": \"es-al\",\n    \"name\": \"Almería\",\n    \"d\": \"m 218.15737,238.08734 1.1,1.08 1.5,-0.46 1.18,1.09 0.44,-0.47 2.94,0.62 -0.77,1.76 0.11,3.67 -0.51,1.05 1.1,3.17 4.04,6.32 1.11,0.82 -0.09,-0.69 2.3,0.34 3.28,2.61 0,0 -1.43,0.81 -3.89,5.01 -1.41,5.9 -1.59,3.13 0.17,1.51 -1.4,0.47 -0.81,1.44 -0.74,0.17 -0.32,2.19 -1.81,1.06 0.03,1.19 -1.4,0.53 -0.46,1.18 -2.16,0.49 -3.1,-3.86 -2.1,-0.79 -2,1.19 -1.7,-0.9 -2.58,0.76 -1.86,3.54 -2.26,1.48 -2.23,0.03 -1.43,-0.94 -0.92,0.44 -2.32,-2.17 -1.57,0.51 -4.69,-0.47 0,0 -0.36,-1.42 3.41,-2.16 -1.22,-2.72 1.15,-0.34 0.28,-1.13 1.4,-0.89 -1.63,-5.2 0.9,0.7 1.58,-0.06 0.6,-2.28 1.48,-1.19 1.1,-3.54 2.03,0.64 0.62,1.38 0.79,-0.41 2.24,0.97 -0.17,-2.8 0.92,-4.2 3.73,-3.28 1.74,-0.44 0.04,-0.71 3,-0.5 -1.01,-4.25 2.32,0.4 -0.23,-2.77 1.43,-3.2 -0.72,-0.5 0.16,-3.35 z\"\n  }, {\n    \"id\": \"es-av\",\n    \"name\": \"Avila\",\n    \"d\": \"m 128.64737,110.64734 4.14,-1.17 3.87,2.71 1.5,-0.38 0.04,-1.06 0.84,-0.57 1.97,-0.24 0,0 0.27,3.51 2.3,1.28 0.97,2.45 1.24,0.59 0.21,2.85 0.85,1.1 -0.84,0.77 0.39,0.57 1.61,-0.33 0.61,2.38 1.32,1.3 0.35,4.39 3.06,-0.56 0,0 1.91,-0.24 -0.54,-0.92 0,0 2.81,-0.88 0.72,0.33 0,0 -0.04,2.68 -2.48,0.85 -1.46,-1.03 0.01,2.55 -1.2,1.2 0.38,2.79 -0.74,1.45 0.6,0.74 -3.1,0.17 -1.03,3.47 -1.5,0.2 -0.68,-1.2 -0.61,0.11 0.53,1.98 -1.23,1.43 0.26,1.38 -0.56,0.21 0,0 -2.3,0.77 -1.01,-0.51 -0.35,-2.86 -1.93,0.86 -1.32,-0.57 -0.11,1.59 -3.59,2.62 -0.02,1.35 -0.95,0.11 0.05,0.49 -1.8,0.4 -0.16,-1.92 -1.58,0.41 -3.12,2.56 -0.93,0.08 -0.33,-0.96 -3.78,-0.36 0,0 -0.98,-1.93 -0.05,-2.17 0.81,-1.83 -2.66,0.47 -1.26,1.78 -1.84,0.53 -2.43,-0.83 -0.37,-1.22 -0.83,-0.15 -1.33,-1.7 -1.38,-0.08 0,0 1.98,-2.19 -0.56,-2.94 1.75,-1.55 2.25,-0.67 -0.42,1.32 1.45,0.88 0.53,-1.66 1.36,-0.09 1.23,-3.64 -0.38,-0.39 -2.66,1.03 0.26,-1.8 0.47,-0.48 0.04,0.63 1.59,0.08 1.99,-1.65 0.52,-1.13 -0.6,-0.92 5.25,-3.48 -0.14,-0.61 1.76,-1.66 -0.07,-2.2 1.48,-1.37 -0.37,-2.09 0.7,-0.25 0.46,-1.47 -1.93,-2.72 z\"\n  }, {\n    \"id\": \"es-b\",\n    \"name\": \"Barcelona\",\n    \"d\": \"m 342.44737,62.537342 1.86,-0.7 5.12,1.31 -1.63,2.43 0.41,0.7 0.71,-0.15 0.22,1.72 -1.71,0.65 0.08,-1.32 -1.29,-0.21 1.19,2.05 1.75,0.57 0.96,-0.36 1.03,1.29 0.58,-0.75 1.73,0.29 0.43,-0.73 1.69,-0.13 0.91,0.45 -0.14,1.3 2.18,-0.77 1.05,0.79 0.53,1.54 1.15,-0.54 1.1,0.44 0.26,2.71 -0.92,0.32 0.59,0.38 -0.42,0.63 -1.39,0.02 1.6,2.17 -1.16,1.15 -1.11,-0.32 -0.75,0.99 -0.4,-0.57 -1.28,0.1 0.72,3.01 2.62,0.29 2.42,1.66 0.97,1.76 3.39,-1.17 3.66,0.5 -0.58,2.31 0.59,1.17 0,0 -6.9,2.94 -5.25,3.42 -3.53,1.46 -4.7,6.929998 -14.35,3.81 0,0 -0.13,-1.61 -0.6,0.49 -1.22,-0.57 -0.35,-0.96 1.52,0.29 0.52,-1.72 -1.49,0.08 0.21,-0.62 -1.11,-1.38 0.59,-0.79 -1.26,-0.93 -0.84,-0.369998 -1.11,0.559998 0.53,-0.839998 -0.46,-1.14 0.62,-0.25 -0.82,-0.34 0.49,-1.26 -2.71,-1.55 0.38,-0.9 1.22,-0.09 -0.54,-0.76 0.72,-0.55 -1.89,-0.24 0,0 0.42,-1.04 -1.44,-0.53 2.78,-1.35 -2.09,-2.42 1.32,-1.11 -0.67,-0.51 0.43,-2.02 1.66,-0.26 -0.31,0.99 1.34,-0.46 0.8,1.45 1.28,-1.21 0.65,0.18 -0.14,-1.07 1.27,-2.25 -0.34,-0.93 -1.54,0.06 2.58,-2 -0.09,-2.09 0.77,-0.12 0.23,0.62 1.12,-0.7 -0.66,-1.24 -0.01,1.21 -1.52,-0.62 0.25,-0.85 0.31,0.72 1.03,-1.07 -0.21,-0.68 -0.63,0.21 0.08,-0.75 0.52,-1.15 0.94,-0.16 -0.72,-1.84 1.24,-1.68 -0.04,-0.53 -1.76,-0.7 0.73,-1.23 -0.43,-1.69 -0.61,-0.19 5.2,-1.08 z m 5.74,7.65 -0.68,0.58 -0.15,-0.75 0.83,0.17 z\"\n  }, {\n    \"id\": \"es-ba\",\n    \"name\": \"Badajoz\",\n    \"d\": \"m 142.05737,178.03734 0.56,1.02 -1.14,3.83 -1.67,0.27 1.62,4.38 1.82,1.78 -4.95,-1.37 -1.97,3.96 1.5,1.44 -0.22,0.64 -1.3,0.56 -2.68,-1.05 1.36,4 2.67,0.84 -0.51,2.1 -2.06,-0.21 -0.88,1.3 -1.42,4.49 -1.75,0.42 0,0 -1.65,0.84 -2.57,-0.47 0.51,1.49 -0.53,0.87 -0.7,-0.33 -0.21,0.75 -2.41,1.55 -0.5,1.24 -1.91,-0.24 -0.34,1.66 -0.74,-0.09 -0.37,1.2 -1.85,1.09 -0.16,0.83 -1.08,0.01 -1.48,1.16 -0.51,1.29 0.77,1.28 -0.49,1.48 1.52,2.55 0.15,2.21 -0.55,0.29 0,1.48 -1.4,1.17 0,0 -1.5,-0.25 -2.36,2.21 -0.75,-0.2 -0.18,-1.56 1.41,-0.93 -0.34,-0.74 0.66,0.48 -0.32,-1.14 -1.02,-0.43 -3.79,0.99 -2.3,2.63 0.54,1.61 -1.37,2.62 -4.96,0.53 -2,1.57 0,0 -0.64,-0.81 -3.14,-0.63 -1.51,-1.13 -0.45,-1.61 -1.43,-0.37 -1.18,0.1 -0.4,1.74 -3.59,-0.38 0.06,-1.24 -1.29,-1.72 -4.16,0.17 -0.36,-0.75 -1.41,-0.31 0.64,-2.27 -1.64,0.05 -2.56,-1.21 0,0 -0.15,-0.48 -2.27,0.62 -0.37,0.75 -1.34,-0.04 -0.58,0.67 -2.01,-4.15 -3.96,-5.6 -1.72,-0.63 1.14,-1.32 -0.06,-0.52 -0.64,0.18 0.21,-1.39 2.18,-4.31 -0.89,-0.56 0.4,-3.36 6.76,-5.5 -0.4,-1.66 3.1,-4.59 -0.91,-2.53 -1.45,-1.09 -2.37,0.64 -1.19,-0.37 0.29,-2.46 -3.28,-1.46 0.29,-2.79 0,0 0.87,0.52 1.59,-2.2 -0.79,-0.37 0.5,-1.19 1.31,-0.9 1.72,0.45 -0.5,0.82 -0.73,-0.15 0.66,1.66 1.14,-0.54 1.07,-2.43 -1.77,-1.02 0.54,-0.89 5.1,2.13 2.49,-0.26 0.15,1.77 1.55,0.91 -0.46,1.81 -1.2,1.44 1.02,2.01 2.66,0.44 0.65,-0.86 0.81,0.09 1.63,0.67 0.18,0.84 1.09,0.13 -0.05,-1.05 4.95,0.75 1.59,-0.94 0.98,3.49 1.98,0.32 0.85,1.32 1.51,0.11 0.36,0.87 3.79,-3.84 0.27,3.01 2.09,-2.21 0.52,1.01 2.79,-1.07 0.72,-1.35 1.7,0.48 1.99,1.94 2.65,-0.69 0.62,-0.69 -0.53,-0.64 0.75,-0.65 -1.13,-1.47 1.92,-1.09 0.69,0.96 0.42,-0.72 1.68,2.02 1.41,0.07 2.05,-3.25 0.22,-3.72 2.83,1.24 3.81,-1.37 0.3,-2 0.71,-0.14 1.13,1.12 2.13,-0.37 0.29,-0.87 0.69,-0.05 0,0 0.36,0 0,0 2.14,1.06 3.55,-1.88 0,0 z\"\n  }, {\n    \"id\": \"es-bi\",\n    \"name\": \"Vizcaya\",\n    \"d\": \"m 201.45737,14.537342 0.41,1.15 1.27,0.81 0.42,1.94 0.06,-1.93 1.18,-0.22 0.73,0.98 3.36,0.62 1.53,1.74 1.47,0.62 0,0 -0.75,0.91 0.57,1.32 -0.56,1.02 -1.88,0.98 0.4,2.04 -0.76,0.43 0.26,2.72 -1.4,0.35 0,0 -3.53,0.58 0.86,2.27 -4.18,-0.29 -2.89,-1.05 -0.93,0.23 -2.42,-2.05 1.14,-1.71 -1.36,-2.75 -0.82,0.22 -0.3,-0.26 -0.32,1.74 -1.47,0.63 -1.12,0.12 -0.92,-0.76 0,0 -0.49,-0.68 -2.05,0.32 -0.9,-1.19 -5.04,2.73 0,0 -0.95,-4.31 3.33,-1.76 0.24,-1 1.63,0.5 1.66,-0.79 0.48,1.07 1.6,-0.75 0.13,-2.18 0,0 1.06,0.43 0.46,-0.89 2.61,1.6 0.2,-0.86 -0.76,-1.12 2.04,-1.67 0.77,0.16 -0.04,-1.13 4.31,0.2 1.66,-1.08 z m -16.96,8.33 1.69,-0.04 -0.6,1.07 0,0 0.12,1.17 0,0 -1.01,-0.02 -0.2,-2.18 z\"\n  }, {\n    \"id\": \"es-bu\",\n    \"name\": \"Burgos\",\n    \"d\": \"m 199.04737,42.387342 0.11,0.32 0,0 2.92,-0.42 2.7,1.24 1.27,-0.25 0.4,0.85 0.95,-0.52 -1.55,2.78 0.96,1.15 1.71,-0.66 0.14,1.57 -3.6,-0.06 -0.75,-1.02 -3.34,0.27 -0.51,-1.37 -2.58,-1.7 1.01,-2.35 0,0 0.16,0.17 z m -18.02,-14.26 5.04,-2.73 0.9,1.19 2.05,-0.32 0.49,0.68 0,0 -1.24,1.7 1.47,0.99 -0.74,0.97 0.55,0.29 -0.05,1.56 -1.1,0.33 3.61,0.77 0.6,1.42 1.82,1.28 -1.15,1.26 -2.17,0.4 -1.84,-0.76 0.15,-0.72 -2.45,-0.63 -1.78,3.1 2.37,2.01 -0.51,-0.47 0.97,-1.29 0.92,0.55 1.41,-1.37 0.06,1.18 -1.41,2.35 1.1,0.64 -0.76,1.36 3.02,-0.37 0.27,1.13 0.75,-0.08 1.1,1.53 1.54,-0.18 0.86,0.61 0.2,1.6 1.17,0.7 0,0 -1.78,0.78 -0.93,-0.82 -4.22,-0.06 0.75,2.14 -2.28,1.96 1.92,0.6 -0.7,1.64 1.49,1.78 -0.53,0.84 0.17,2.27 -0.63,-1.89 -0.71,-0.04 -0.09,1.3 0.6,0 0.65,1.21 -1.4,0.17 0.63,4.39 -1.25,1.91 2.92,4.68 3.17,-0.03 0.54,2.63 0,0 0,0 0,0 -1.13,1.19 -0.62,2.66 -1.14,0.29 -0.27,1.45 -2.47,0.24 -1.2,2.84 -1.08,0.78 -0.71,-1.47 -2.74,-2.25 0.26,4.72 -2.38,1.26 -0.17,1.82 -1.07,0.12 -2.02,4.13 -2.15,-0.94 -0.65,0.66 0.27,0.78 0,0 -3.99,0.7 -1.74,1.75 -0.34,2.73 -0.93,-0.38 0.06,-3.22 -1.1,0.5 0.49,1.67 -1.11,0.19 -2.17,-2.9 -2.64,-1.27 0,0 -0.77,-1.47 -0.9,-0.05 0.28,-2.94 -1.54,-1.38 1.09,-1.73 0,0 0.09,-0.88 -1.6,-1.68 0.04,-1.63 1.57,-0.09 1.75,-1.14 -0.02,-1.24 1.37,-1.08 1.36,-0.02 0.03,-1.61 -4.34,1.75 0.56,-1.83 1.34,-1.42 -0.35,-0.75 -1.74,-0.08 -1.25,0.68 -0.71,-2.07 0.78,0.18 0.65,-0.75 -1.99,-1.13 -0.65,0.36 -1.94,-0.62 0.52,-1.72 -1.31,-1.32 -1.27,-7.33 -1.5,0.24 -0.41,-1.66 0.55,-1.62 2.29,0.11 -0.14,-1.59 -1.2,-0.72 0.26,-1.36 -0.79,-0.44 -0.06,-0.64 1.06,-0.44 -0.67,-1.02 0.88,-0.5 -0.9,-3.03 0.81,-0.6 0.3,0.72 3.4,-2.66 1.12,0.76 0.87,-1.15 0,0 1.09,-0.21 0,0 1.42,-0.1 0,0 0.64,0.45 2.09,-0.43 0.51,-1.51 0.95,0.75 1.45,-1 -0.64,-2.84 -0.83,-0.46 -0.5,1.6 -1.08,-0.4 0.55,-0.81 -0.82,-0.37 0.96,0.08 -0.46,-1.13 1.2,0.65 1.08,-0.79 -0.18,-0.91 -1.47,-0.37 -0.12,0.97 -1.3,1.08 0.12,-0.63 -1.41,0.05 -0.55,-0.8 1.39,-3.13 1.11,-0.43 0.57,-1.08 1.28,0.03 0.53,-0.95 -0.47,-0.86 2.76,-0.03 0.03,-0.59 1.57,-0.72 1.65,-2.71 1.18,0.48 0.27,0.83 5.71,0.69 z m -19.88,40.32 0.11,1.32 -1.47,-0.48 -0.05,-0.63 1.41,-0.21 z\"\n  }, {\n    \"id\": \"es-c\",\n    \"name\": \"A Coruña\",\n    \"d\": \"m 49.94737,0.3973425 0.84,0.68 -1.38,2.74 0,0 0.14,1.03 -0.51,-0.04 0.87,1.38 -1.36,1.41 0.54,1.57 -0.95,0.27 0.13,2.7699995 -1.09,2.66 -0.83,0.49 -0.48,1.54 -2.08,0.1 0.1,2.61 -1.82,2.11 0.78,0.7 -1.21,3.34 1.37,4.26 -0.8,0.86 1.07,4.87 -2.81,4.27 0,0 -1.42,0.73 -0.79,-0.87 -1.37,0.47 -2.07,-0.79 -1.14,0.66 0.32,0.86 -1.38,-0.53 -0.74,1.06 -1.1,-1.46 -0.32,0.61 -0.41,-0.39 0.23,1.94 -0.68,0.64 -1.16,-0.43 -0.45,1.46 -1.93,0.44 -2.66,-0.7 0.06,0.58 -1.39,0.15 -0.21,1.16 -1.36,-0.58 -2.04,0.95 -0.29,1.22 0,0 -0.62,1.1 -1.75,0.58 -0.65,-0.38 0.29,-0.75 -1.09,-0.08 -0.31,0.82 0.71,0.59 -0.62,0.22 0.04,0.85 -0.95,-0.16 0.43,-0.93 -0.82,-0.45 -0.89,1.59 0.29,0.77 -1.02,0.07 -1.14,0.88 0.23,0.84 -2,1.1 0.41,-1.75 -0.64,-0.7 -1.12,0.02 1.6,-2.72 0.2,-2.27 3.23,-3.65 1.14,0.13 0.15,-1.48 -0.56,-0.51 -0.1,1.1 -0.83,-0.13 -0.73,1.08 -0.64,-0.62 -0.03,0.66 -1.05,-0.16 -0.08,-0.86 -1.4,0.68 0.48,0.73 -1.33,1.34 -1.92,-2.72 1.24,-0.39 0.2,-0.78 -1.36,-1.64 0.74,-1.54 -1.07,-0.22 -0.36,-1.35 -0.52,-0.31 0.1,1.53 -1.37,-1.11 -0.04,0.64 -0.88,0.23 -0.37,1.68 -0.01,-1.24 -0.72,-0.49 1.13,-3.3 -1.18,-2.35 0.84,0.5 0.48,-1.98 2.78,-0.52 0,-1.92 -0.81,1.16 -0.66,-1.76 0.42,0.41 0.78,-1.53 0.51,0.35 0.63,-0.79 1.53,0.49 -0.11,0.43 0.96,-0.15 1.47,-2.09 0.44,0.73 0.5,-0.57 1.48,0.42 -0.56,-1.82 -1.24,-0.54 1.21,-0.82 0.69,0.49 0.68,-0.43 -0.08,-1.2 2,0.08 0.18,-1.09 1.63,1.74 2.23,0.64 3.27,-1.44 2.28,0.35 2.9,-2.83 0.91,0.57 0.28,-0.91 0.49,2.13 1.1,-0.34 0.31,-1.27 -0.54,-0.5 1.5,-0.65 2.95,3.31 -0.35,-2.73 1.04,-1.37 -1.55,-0.22 -0.2,0.54 -2.22,-1.17 1.91,-0.89 1.66,0.23 1.44,-2.21 -1.43,1.48 -1.56,-0.28 -0.46,0.73 -2.29,0.39 0.67,-1.65 -0.4,-0.66 1.18,-0.87 -0.88,-1.34 1.83,0.38 2.3,-2.7699995 0.84,0.32 2.07,-2.23 0.22,1.2 1.07,0.24 -0.65,-0.66 0.6,-0.38 -0.74,-0.13 0.44,-1.89 1.93,-0.01 1.5,-1.53 0.9,-0.09 0.47,-1.06 1.16,-0.22 -0.11,1.78 0.68,0.65 -0.84,-0.2 0.17,2.1 -0.77,0.09 1.52,0.05 -0.42,-1.58 1.62,0.46 -0.66,-0.56 1.09,-1.15 2.4,-0.83 0.73,-1.6 z\"\n  }, {\n    \"id\": \"es-ca\",\n    \"name\": \"Cadiz\",\n    \"d\": \"m 91.63737,277.23734 1.62,-0.46 0.75,0.65 3.02,0.33 1.57,1.07 6.55,0.57 0.45,-2.01 0.95,-0.78 3.94,-0.16 1.51,-2.16 1.52,1.36 0.93,-0.24 0.16,1.23 1.51,0.82 -0.37,-1.41 2.33,-2.05 -1.27,-1.9 0.43,-0.23 2.11,-0.21 0.21,1.3 -1.19,1.27 0.65,1.63 4.2,-3.9 2.06,3.68 2.84,-2.4 0,0 1.44,1.36 -0.45,0.34 0.72,2.07 -1.45,2.54 -1.11,0.57 -3.05,-2.32 -0.98,0.56 -1.2,1.92 1.53,1.69 -1.03,1.95 0.02,1.93 -1.69,1.55 -2.36,0.5 -0.15,1.17 -1.88,2.17 -2.24,-0.73 -0.51,0.35 0.11,1.12 2.58,0.55 0.96,-1.46 1.86,0.07 2.61,4.39 0.83,3.55 1.3,-0.45 0.78,0.99 0,0 -2.1,3.34 -0.56,2.58 -1.48,-0.98 -1.58,0.58 0.24,3.59 -5.33,2.29 -2.58,-2.22 -0.68,0.4 -2.04,-1.15 -0.67,0.38 -3.37,-3.94 -3.85,0.08 -1.6,-3.41 -1.74,-0.99 -5.06,-8.94 1.13,-0.18 1.33,2.82 1.65,-2.26 -2.06,0.6 -0.43,-0.86 0.82,0.11 -0.03,-2.32 -1.06,0.32 -1,-1.43 -2.74,-0.44 -1.56,-3.36 -0.13,-0.86 2.85,-2.19 0,0 -0.13,-2.23 0.64,-1.71 z\"\n  }, {\n    \"id\": \"es-cc\",\n    \"name\": \"Caceres\",\n    \"d\": \"m 75.24737,145.37734 0.94,0.92 2.42,0.35 1.14,-1.22 0.87,1.07 0.56,-0.83 2.6,-0.3 0.95,-0.8 -0.13,-1.53 0.74,-0.73 3,-1.03 0.6,-1.06 1.32,-0.04 0.96,-1.71 3.48,-1.76 2.25,1.19 0.33,0.84 0.95,-0.22 -0.41,0.84 1.98,0.97 -1.25,1.59 2.75,0.67 -0.01,0.95 1.47,1.08 1.58,0.48 1.01,-1.97 2.66,-1.06 0.13,2.66 1.71,-0.29 0,0 1.38,0.08 1.33,1.7 0.83,0.15 0.37,1.22 2.43,0.83 1.84,-0.53 1.26,-1.78 2.66,-0.47 -0.81,1.83 0.05,2.17 0.98,1.93 0,0 -1.01,0.63 0.12,4.64 -1.26,4.23 2.44,-0.57 1.3,1.12 -0.87,1.58 0.11,2.54 1.68,0.31 1.48,-1.79 1.2,-0.09 0.26,1.6 -0.47,0.35 1.1,1.43 -0.73,2.85 -1.38,1.82 7.8,8.01 0,0 -0.69,0.05 -0.29,0.87 -2.13,0.37 -1.13,-1.12 -0.71,0.14 -0.3,2 -3.81,1.37 -2.83,-1.24 -0.22,3.72 -2.05,3.25 -1.41,-0.07 -1.68,-2.02 -0.42,0.72 -0.69,-0.96 -1.92,1.09 1.13,1.47 -0.75,0.65 0.53,0.64 -0.62,0.69 -2.65,0.69 -1.99,-1.94 -1.7,-0.48 -0.72,1.35 -2.79,1.07 -0.52,-1.01 -2.09,2.21 -0.27,-3.01 -3.79,3.84 -0.36,-0.87 -1.51,-0.11 -0.85,-1.32 -1.98,-0.32 -0.98,-3.49 -1.59,0.94 -4.95,-0.75 0.05,1.05 -1.09,-0.13 -0.18,-0.84 -1.63,-0.67 -0.81,-0.09 -0.65,0.86 -2.66,-0.44 -1.02,-2.01 1.2,-1.44 0.46,-1.81 -1.55,-0.91 -0.15,-1.77 -2.49,0.26 -5.1,-2.13 -0.54,0.89 1.77,1.02 -1.07,2.43 -1.14,0.54 -0.66,-1.66 0.73,0.15 0.5,-0.82 -1.72,-0.45 -1.31,0.9 -0.5,1.19 0.79,0.37 -1.59,2.2 -0.87,-0.52 0,0 -2.4,-2.45 -0.38,-1.62 0.83,-3.04 -2.64,-1.29 -0.27,-1.52 -1.22,-0.19 -2.12,-2.19 -1.3,-2.94 6.38,0.91 2.53,-1.03 3.07,0.55 4.17,-0.69 1.19,-4.05 -0.32,-1.5 2.56,-2.42 -0.09,-2.11 1.31,-3.52 -2.36,-4.01 -2.21,-0.55 -0.53,-2.41 0.98,-1.96 z\"\n  }, {\n    \"id\": \"es-ce\",\n    \"name\": \"Ceuta\",\n    \"d\": \"m 36.17737,403.83734 -1.21,0.7 -1.67,2.53 -1.01,-0.15 -0.8,-1.19 -1.05,0.9 -0.91,-0.11 -1.65,-2.14 -3.73,-1.49 -1.54,-5.52 0.08,-3.63 -1.65,-2.81 1.01,-1.43 4.54,-0.79 3,2.73 2.28,1.05 0.73,2.41 3.18,3.14 0.9,0.15 0,-0.72 2.65,-2.16 0.63,0.91 -0.45,0.83 2.41,2.78 1.38,0.4 2.51,-1.6 1.07,0.19 0.55,-3.1 2.83,-1.8 0.44,-1.11 1.89,2.6 1.45,0.07 -0.21,2.59 -0.84,-0.09 -1.48,1.86 -1.89,0.73 -0.92,-0.29 -3.43,2 -4.04,-1.22 -2.71,3.42 z\"\n  }, {\n    \"id\": \"es-co\",\n    \"name\": \"Cordoba\",\n    \"d\": \"m 131.44737,248.70734 0.47,1.93 -2.02,-2.16 1.55,0.23 z m -0.41,-42.27 1.19,0.54 0.11,0.79 3.92,0.35 0.52,2.82 4.69,1.64 0.13,0.76 2.48,1.14 0.88,1.45 0.86,-0.17 1.61,1.04 1.85,2.47 5.65,2.09 0,0 0.96,0.22 -0.04,1.02 0.88,0.55 -0.19,2.13 0.63,0.36 1.06,3.61 -1.74,1.33 0.12,0.83 -1.16,1.05 0.36,0.61 -0.87,0.26 0.28,0.68 -0.68,-0.02 0.72,3.41 -0.85,5.35 2.46,0.69 -0.98,2.28 1.69,0.49 0.59,0.99 -1.95,1.62 0.21,0.66 1.45,0.48 2.33,3.8 1.18,0.23 -0.85,0.75 1.2,0.69 1.45,2.54 0,0 -2.61,-0.06 -2.21,2.37 -1.41,-0.41 -0.99,0.66 -0.58,4.08 -2.22,1.74 0,0 0.15,-0.77 -1.53,-0.43 -0.33,-2.36 -1.86,-0.02 -1.28,1 -0.18,0.94 -1.46,0.62 -1.93,0.08 -0.35,-1.76 -1.22,-0.03 0,0 -1.03,-3.28 -1,-0.65 -0.32,0.88 -1.6,0.26 -1.23,-1.14 0.22,-0.75 -1.07,-1.26 0.3,-0.93 -1.37,-0.12 -0.65,-2.38 -1.32,-0.85 0.53,-3.68 -1.3,0.67 0.62,-2.03 -1.41,-2.09 -1.47,-0.45 -0.76,0.41 -0.58,1.07 0.64,0.74 -0.84,-0.37 -0.32,-1.16 -0.66,0.06 0.67,1.4 -1.29,0.06 -0.82,-0.76 -5.57,3.66 -1.72,-2.33 0.63,-0.41 -0.56,-1.03 0.73,-0.55 0.4,0.77 1.12,-1.1 0.35,0.57 0.6,-0.29 -0.07,-2.9 -1.22,-0.77 0.16,-1.77 -2.15,-1.15 -0.02,-2.86 -2.38,-2.02 -0.07,-1.81 -2.74,-3.47 0,0 1.41,-1.16 0,-1.48 0.55,-0.29 -0.15,-2.21 -1.52,-2.55 0.49,-1.48 -0.76,-1.27 0.5,-1.29 1.49,-1.16 1.08,-0.01 0.15,-0.83 1.86,-1.09 0.36,-1.2 0.74,0.09 0.34,-1.66 1.91,0.24 0.5,-1.24 2.41,-1.54 0.21,-0.76 0.71,0.33 0.53,-0.87 -0.51,-1.49 2.57,0.47 1.56,-0.92 z\"\n  }, {\n    \"id\": \"es-cr\",\n    \"name\": \"Ciudad Real\",\n    \"d\": \"m 134.29737,180.22734 1,-3.9 1.38,-2.47 3.43,2.17 -0.12,3.39 0,0 -3.55,1.88 -2.14,-1.07 z m 7.76,-2.19 2.13,-0.16 -0.01,-1.2 1.55,-0.5 0.21,-1.44 0.56,-0.41 0.36,0.49 0.18,-1.18 1.33,0.9 -0.89,0.66 1.52,1.73 0.55,-1.76 2.04,1.08 4.15,0.72 1.5,-0.69 1.06,-3.22 1.05,0.52 2.54,-0.47 0.36,2.12 -0.91,0.01 -0.26,2.57 -1.53,0.01 -0.92,3.72 0.85,0.01 0.49,0.85 0.95,-0.96 3.1,0.52 0.21,2.13 3.32,1.57 1.98,-1.33 2.16,0.89 1.3,-1.13 4.53,-0.23 1.71,-1.54 0.2,-1.15 1.85,-1.28 3.1,0.22 -0.2,-1.37 0.66,-1.47 3.35,-0.13 0.02,-0.55 1.26,-0.3 2.27,1.79 1.44,-0.27 0.71,0.61 1.31,-0.22 0.78,-0.96 0,0 1.88,3.18 -0.7,1.28 1.46,0.37 1.61,-1.91 0.52,0.12 1.04,3.03 0,0 0.59,2.11 -3.67,5.14 1.16,2.19 -0.15,2.17 -0.68,0.02 -1.55,3.33 3.71,2.28 0.91,3.86 1.07,-0.06 1.83,1.91 -0.95,3.34 -1.83,1.29 -1.08,-0.46 0.52,3.17 -0.47,0.55 0,0 -3.66,3.13 -0.74,-0.67 -1.77,-0.06 -0.92,0.83 -0.28,1.63 -1.92,-2.73 -2,1.54 -4.6,-0.84 -1.43,-0.85 -1.49,0.27 -0.05,1.39 -2.35,1.54 -2.31,-0.33 -0.43,-1.45 -1.25,-0.22 -0.47,2.07 -5.75,-1.04 -1.36,0.49 -0.74,1.47 -1.79,0.24 -7.47,-0.48 -3.05,-0.8 -0.64,0.43 0.24,1.7 0,0 -5.65,-2.09 -1.85,-2.46 -1.61,-1.04 -0.86,0.17 -0.88,-1.45 -2.48,-1.14 -0.13,-0.76 -4.69,-1.64 -0.52,-2.82 -3.92,-0.35 -0.1,-0.79 -1.19,-0.54 0,0 1.75,-0.42 1.43,-4.49 0.88,-1.3 2.06,0.21 0.51,-2.1 -2.67,-0.84 -1.36,-4 2.68,1.05 1.3,-0.56 0.21,-0.64 -1.49,-1.44 1.97,-3.96 4.95,1.36 -1.82,-1.77 -1.62,-4.38 1.67,-0.27 1.14,-3.83 -0.62,-1.08 z\"\n  }, {\n    \"id\": \"es-cs\",\n    \"name\": \"Castellón\",\n    \"d\": \"m 261.42737,160.93734 -1.31,-1.75 0.08,-2.06 1.84,-0.87 0.74,-1.93 2.17,0.1 2.13,-1.03 -0.46,-1.28 1.54,-1.44 1.05,-4.55 1.52,0.92 2.04,-0.6 1.36,-0.84 -0.2,-1.63 0.73,0.02 0.79,-1.4 1.79,-1.01 -1.99,-3.16 2.29,-1.19 -0.89,-1.7 0.26,-3.83 -2.37,-0.1 -0.23,-2.17 1.51,-0.52 0.67,0.84 2.18,-1.27 0.37,-2.54 0.82,-1.22 0.99,-0.17 3.08,2.47 2.47,-0.04 0.81,1.51 0.94,-0.94 3.01,-0.75 0,0 1.7,-0.01 0.3,1.25 1.72,0.55 -0.72,1.17 0.32,1.19 0,0 3.78,1.11 0,0 1.29,0.97 -0.18,1.25 2.37,0.97 0,0 -3.55,6.64 -3.45,4.19 -0.7,1.81 -2.22,1.46 -1.36,3.59 -3,1.86 -1.7,4.81 -2.51,2.36 -3.09,5.3 0,0 -2.21,-0.87 -2.06,-2.28 -1.52,0.06 -0.51,1.58 -1.89,1.81 -2.28,-3.23 -1.43,0.91 -0.34,1.25 -1.31,-0.18 -0.65,-0.31 -0.12,-3.26 -1.07,-0.66 -1.21,1.49 -2.13,-2.65 z\"\n  }, {\n    \"id\": \"es-cu\",\n    \"name\": \"Cuenca\",\n    \"d\": \"m 191.76737,149.90734 0.12,-0.43 1.45,0.63 0.32,-2.24 2.86,2.05 1.21,-0.66 0.32,-1.06 1.28,-0.2 0.58,-2.36 -0.44,-4 1.1,-3.22 1.78,1.89 0.17,-0.92 0.82,1 0.31,-0.31 -0.72,-0.79 0.87,-1.03 0.38,0.48 2.39,-0.56 2.15,1.04 0.33,-0.98 -1.22,-1.05 0.53,-2.8 0.96,1.43 2.14,-1.28 0.44,0.6 0.98,-0.72 -1.12,-1.49 0.12,-0.86 1.22,-0.21 0.9,1.52 1.4,-0.14 0.71,-2.89 1.87,1.03 1.33,-0.43 0.41,-1.16 0.71,0.11 4.55,2.84 0.63,-1.05 1.18,0.7 2.15,6.64 1.54,1.23 0,0 3.33,3.09 -0.96,0.72 0.3,1.05 0.89,-1.31 4.6,4.76 0.9,-0.51 1.12,0.74 1.09,-0.47 -0.3,2.06 0,0 -0.23,0.58 1.49,1.18 -0.38,0.31 1.33,3.08 3.95,0.85 2.54,-0.6 0,0 0.7,1.53 0,0 -2.02,1.12 0.26,3.36 -0.47,2.02 -1.85,2.85 0.41,1.51 -0.54,0.84 -1.02,0.29 -1.71,-0.76 -1.51,1.38 -1.36,3.11 -1.29,0.5 -0.51,5.25 0.75,0.1 -0.27,0.43 0,0 -7.18,3.83 -0.94,1.6 -3.6,-0.95 -3.15,0.43 -1.2,-1.75 0.26,-0.54 -2.33,-0.28 1.39,3.64 -3.6,-0.57 -3.69,2.15 -1,-2.25 -0.89,0.22 -0.73,1.79 -4.2,-4.32 -1.23,0.74 -2.09,-0.66 -3.78,0.87 0,0 -1.04,-3.03 -0.52,-0.12 -1.61,1.92 -1.46,-0.38 0.71,-1.28 -1.88,-3.18 0,0 0.71,-6.77 -2.75,-3.04 -2.41,-5.44 -1.56,-0.76 0.92,-2.34 0.02,-2.13 -1.41,0.08 -0.58,-3.2 0,0 1.33,0.13 1.76,-1.14 0.13,-0.91 -1.24,-1.17 0.26,-0.82 z\"\n  }, {\n    \"id\": \"es-gc\",\n    \"name\": \"Las Palmas de Gran Canaria\",\n    \"d\": \"m 272.62737,424.13734 0.55,0.56 -0.48,1.3 -0.33,-0.62 0.23,2.96 1.45,1.8 -0.24,2.01 0.71,0.65 -0.81,0.16 -0.02,2.42 -0.9,0.38 -0.56,1.61 -3.89,1.25 -0.36,0.94 -3.16,-0.43 -3.5,-2.96 -1.34,-2.59 0.27,-3.62 3.32,-2.22 0.2,-3.05 2.18,-0.22 1.18,0.97 2.23,-0.39 1.81,1.03 0.91,-0.38 -0.2,-1.01 0.75,-0.55 z m 47.02,-19.99 1.42,1.04 0.32,1.15 0.19,4.94 -1.33,2.51 0.55,2.79 -2.06,5.13 -2.93,1.57 -6.35,1.44 -3.44,4.14 -4.46,-1.08 -1.06,0.36 0.59,-1.55 1.28,0.36 2.47,-0.56 4.48,-3.38 0.56,-3.94 1.26,-1.36 0.51,-2.51 1.5,-1.37 1.99,-3.96 0.78,-2.81 -0.28,-1.44 4.01,-1.47 z m 12.81,-16.89 1.43,1.14 0.13,0.85 -1.4,1.98 0.54,1.37 -1.18,3.39 -1.81,1.41 -5.88,1.58 -1.52,2.38 -0.47,-0.69 -2.24,0.11 -0.26,-1.1 1.62,-1.53 0.39,-3.6 1.88,-1.57 1.48,-0.04 1.51,-1.6 0.84,0.29 1.06,-0.69 1.59,0.59 2.29,-4.27 z\"\n  }, {\n    \"id\": \"es-gi\",\n    \"name\": \"Girona\",\n    \"d\": \"m 348.18737,70.187342 -0.68,0.58 -0.15,-0.75 0.83,0.17 z m -1.23,-13.47 -1.01,-0.44 0.63,-1.52 1.15,1.7 -0.77,0.26 z m -7.01,-1.71 1.92,0.08 2.07,1.6 1.41,-0.27 0.85,2.98 1.56,1.46 2.11,-0.61 1.37,-2.14 2.4,-0.14 1.52,-0.89 5.43,1.88 1.53,2.21 1.32,0.27 1.38,-1.04 3.08,0.74 -0.6,-1.92 0.59,0.01 0.02,-0.7 1.9,-0.87 2.01,0.27 1.25,-1.7 2.41,0.13 0.88,-1.09 0.63,0.7 2.03,-0.38 1.6,2.03 2.71,-0.4 -0.33,3.11 4.82,1.61 -0.92,0.62 -0.26,2.17 -0.86,0.06 0.33,0.64 -1.11,-0.58 -0.32,0.79 -1.69,-1.35 -1.56,2.23 0.37,3.43 1.62,0.68 1.1,1.75 -0.58,1.85 0.51,2.13 0.73,0.42 -0.95,2.89 -2.22,2.08 -0.91,-0.12 -1.36,2.37 -2.42,1.18 -1.31,1.76 -3.18,0.85 -1.66,1.77 0,0 -0.59,-1.17 0.58,-2.31 -3.66,-0.5 -3.38,1.17 -0.97,-1.76 -2.42,-1.66 -2.62,-0.29 -0.72,-3.01 1.28,-0.1 0.4,0.57 0.75,-0.99 1.11,0.32 1.16,-1.15 -1.6,-2.17 1.39,-0.02 0.42,-0.63 -0.59,-0.38 0.93,-0.32 -0.26,-2.71 -1.1,-0.44 -1.15,0.54 -0.52,-1.54 -1.05,-0.79 -2.18,0.77 0.14,-1.3 -0.91,-0.45 -1.68,0.13 -0.43,0.73 -1.73,-0.29 -0.58,0.75 -1.03,-1.29 -0.96,0.36 -1.75,-0.57 -1.19,-2.04 1.29,0.21 -0.08,1.32 1.71,-0.65 -0.22,-1.72 -0.71,0.15 -0.41,-0.69 1.63,-2.43 -5.12,-1.31 -1.86,0.7 0,0 -0.23,-2.03 0.61,-0.58 -0.77,-0.49 -0.73,0.47 -0.14,-2.27 -2.14,-0.64 -0.03,-2.16 0,0 0.89,0.11 z\"\n  }, {\n    \"id\": \"es-gr\",\n    \"name\": \"Granada\",\n    \"d\": \"m 207.61737,231.58734 3.92,1.96 2.51,0.3 0,0 4.11,4.24 0,0 -2.67,1.56 -0.16,3.35 0.72,0.5 -1.43,3.2 0.23,2.77 -2.32,-0.4 1.01,4.25 -3,0.5 -0.04,0.71 -1.74,0.44 -3.73,3.28 -0.92,4.2 0.17,2.8 -2.24,-0.97 -0.79,0.41 -0.62,-1.38 -2.03,-0.64 -1.1,3.54 -1.48,1.19 -0.6,2.28 -1.58,0.06 -0.9,-0.7 1.63,5.2 -1.4,0.89 -0.28,1.13 -1.15,0.34 1.22,2.72 -3.41,2.16 0.36,1.42 0,0 -6.43,0.46 -2.52,1.71 -1.9,-0.12 -1.01,-1.03 -1.2,0.35 -1.49,-1.12 -1.7,-0.08 -2.16,1.04 -1.5,-0.69 0,0 0.28,-2.48 -1.81,-2.04 -1.24,0.18 -1.9,-1.23 -3.62,-0.79 -1.61,-1.88 -2.05,-0.16 -1.98,-2.29 -1.27,0.07 -0.44,-4 -1.25,-2.49 0,0 2.22,-1.73 0.58,-4.08 1,-0.66 1.4,0.41 2.22,-2.36 2.61,0.06 0,0 1.53,0.91 3.37,-0.3 1.71,-4.03 0.28,0.56 4.58,-2.01 3.7,-3.42 3.29,2.05 3.14,-0.92 1.06,-1.98 1.43,-0.19 1.34,0.05 2.47,1.79 1.23,-0.84 2.25,0.6 0.01,-1.2 2.88,-1.83 -0.54,-0.31 -0.07,-2.39 0.73,-0.34 2.92,-6.08 1.91,-1.76 0.87,-0.46 0.73,0.51 1.99,-1.41 -0.02,-2.49 z\"\n  }, {\n    \"id\": \"es-gu\",\n    \"name\": \"Guadalajara\",\n    \"d\": \"m 182.62737,130.56734 -0.17,0.58 0,0 -0.34,-0.19 0,0 0.51,-0.39 z m 4.86,-26.92 4.46,1.25 3.43,-0.78 1.33,-1.42 1.16,0.43 0.06,1.73 1.37,0.73 1.43,0.27 0.45,-0.97 1.36,-0.07 0.22,0.96 1.95,0.48 0.52,1.02 1.22,-0.38 -0.11,0.96 -0.89,0.53 1.35,0.35 -0.55,1.13 0.63,0.49 1.2,-0.94 0.85,1.77 0.87,0.21 0.34,1.44 1.55,0.83 1.95,-1.17 0.98,1.21 1.84,-0.45 0.96,-1.19 1.74,0.54 1.33,-1.39 2.31,1.96 0.15,-3.13 0,0 2.84,-1.04 0.82,1.38 3.99,2 5.68,5.89 0,0 -0.09,2.6 2.39,2.76 0.07,2.04 -0.68,0.85 0.81,2.13 -0.9,2.91 0.59,0.79 -1.63,1.33 -2.43,-1.16 -0.73,2.12 0.29,2.07 -1.72,0.96 -1.77,2.6 0,0 -1.54,-1.23 -2.15,-6.65 -1.17,-0.69 -0.63,1.04 -4.55,-2.84 -0.71,-0.11 -0.41,1.16 -1.33,0.43 -1.86,-1.03 -0.71,2.9 -1.4,0.14 -0.89,-1.52 -1.22,0.2 -0.12,0.87 1.12,1.49 -0.98,0.72 -0.44,-0.6 -2.14,1.28 -0.96,-1.43 -0.53,2.8 1.23,1.04 -0.33,0.98 -2.15,-1.04 -2.39,0.56 -0.38,-0.48 -0.86,1.02 0.71,0.8 -0.3,0.3 -0.82,-0.99 -0.17,0.91 -1.78,-1.89 -1.1,3.23 0.44,4 -0.58,2.36 -1.28,0.2 -0.33,1.06 -1.21,0.66 -2.85,-2.05 -0.32,2.24 -1.45,-0.63 -0.12,0.43 0,0 -1.28,-5.11 -1.95,2.05 -0.69,-0.55 2,-6.31 -0.78,-1.37 -1.31,-0.12 -0.06,-2.91 -1.51,-1.17 -1.45,0.26 0.42,-1.37 -1.44,-1.04 -0.22,-1.13 0.62,-1.16 -0.66,0.71 -1.67,-2.26 -0.36,0.91 -1.92,-0.79 1.02,-1.65 -0.52,-0.29 0.23,-0.92 -0.69,-0.95 -1.37,-0.18 1.05,-1.52 0.1,-1.54 0.99,-0.47 -0.59,-1.3 0.48,0.01 0.81,-3.21 0.72,-0.51 -1.34,-1.72 0.38,-1.65 -1.91,-0.43 -1.59,-2.88 0,0 2.24,-0.74 0.7,-1.3 1.28,0.07 -0.22,-1.91 2.25,0.31 2,-0.9 0.5,0.71 1.41,-1.94 z\"\n  }, {\n    \"id\": \"es-h\",\n    \"name\": \"Huelva\",\n    \"d\": \"m 71.64737,265.12734 1.03,1.97 -2.63,-1.61 -7.39,0.12 -3.03,1.17 -0.92,-0.21 -0.92,-2.78 0.37,-0.91 -0.63,-1.44 0.05,-3.06 -0.68,-0.69 0.53,-0.4 -0.56,-2.61 -1.81,-2.64 0.58,-1.89 1.85,-2.31 0.68,-3.64 2.98,-2.2 1.25,-2.05 1.08,-3.32 -0.43,-0.98 1.85,-0.91 0.89,0.41 1.62,-0.46 -0.23,-0.96 0.91,-0.56 1.59,1.15 1.37,-0.31 0.44,-3.09 1.09,-1.97 -0.52,-0.53 1.15,-1.63 0,0 2.55,1.21 1.64,-0.05 -0.64,2.27 1.41,0.32 0.35,0.75 4.17,-0.17 1.29,1.72 -0.05,1.24 3.59,0.38 0.4,-1.74 1.18,-0.1 1.43,0.37 0.45,1.61 1.51,1.13 3.13,0.63 0.65,0.81 0,0 0.34,1.23 0.75,-0.42 0.61,0.6 -1.2,1.63 1.29,1.77 -0.37,1.13 -1.65,-0.85 -0.85,0.72 -0.2,1.99 -0.93,-0.12 0.01,-0.78 -1.81,-0.07 -4.27,1.78 -0.72,-0.25 -0.88,2.26 -1.04,0.61 0.25,1.36 4.08,0.19 0.08,2.2 2.63,4.58 -0.18,0.63 -1.34,0.25 -0.18,1.4 0.49,0.39 -1.18,1.09 1.58,1.48 -0.82,2.34 0.73,2.63 -0.72,1.2 0.53,0.59 -1.35,1.86 0.99,3.38 -0.76,1.97 1.47,1.37 0,0 -0.68,1.67 0.13,2.23 0,0 -1.48,-0.5 -1.54,-3.66 -2.23,-2.72 -10.89,-6.58 -2.4,-2.68 -0.91,0.06 z\"\n  }, {\n    \"id\": \"es-hu\",\n    \"name\": \"Huesca\",\n    \"d\": \"m 258.25737,44.437342 0.01,-0.74 0.84,0.07 0.79,-1.13 -0.28,-2.54 1.17,-0.93 -0.02,-1.31 1.1,-0.88 1.71,0.1 0,0 -0.01,1.12 1.88,0.67 1.99,1.88 0.04,1.2 0.96,-0.18 0.03,1.06 1.18,-0.42 0.75,-1.49 1.85,1.3 1.61,-0.17 2.44,-1.97 3.79,2.51 0.91,-0.45 1.65,3.21 1.15,0.09 0.22,1 1.44,0.41 5.86,-2.15 2.55,0.84 1.09,1.79 2.01,-2.1 1.89,1.4 4.76,-0.15 0.61,-0.49 1.93,0.61 0,0 1.48,2.9 1.82,0.41 -0.55,3.17 -0.86,0.4 0.55,0.83 -1.5,0.73 1.7,4.26 -0.7,0.79 1.48,0.62 -0.95,0.57 0.74,0.6 -1.9,5.47 0.35,1.1 -1.91,5.65 0.17,1.01 -2.93,2.61 1.4,0.78 -0.45,1.43 0.44,0.5 -0.83,0.88 -0.7,-0.14 -0.46,1.39 -1.81,0.77 -0.42,1.47 -2.18,0.32 -0.1,1.06 -0.33,-0.34 -1.73,2.43 0.91,2.02 -0.25,1.32 2.42,-0.12 0.56,2.45 -1.5,2.08 -1.72,0.3 0.41,1.32 -0.62,1.77 0,0 -2.76,-0.83 -0.8,1.02 -1.17,0.37 -0.5,-0.5 -2.19,2.309998 -2.56,-0.42 -1.04,-1.489998 0.49,1.999998 -1.27,-0.51 -0.71,-0.68 -0.99,-4.419998 -1.59,-2.03 0.01,-2.24 -1.52,-0.5 -1.23,1.17 -2.04,-2.06 -1.53,-0.56 -0.37,-2.06 -3.53,-1.79 -0.92,0.1 0.57,-1.31 -0.49,-3.09 -1.18,-1.42 -1.48,-0.47 0.26,-0.67 -1.08,-0.55 -0.85,-1.85 -3.69,0 -3.28,-1.9 2.46,-3.82 0.31,1.7 0.98,-0.53 0.47,-3.62 -0.36,-4.45 0.93,-1.41 -0.23,-2.98 -1.27,-0.89 0.17,1.9 -1.25,3.35 -1.96,-0.71 -0.38,1.69 -0.88,-0.61 2.26,-5.33 0.89,-0.44 -2.77,-1.72 0.85,-1.04 -0.46,-2 -1.25,0.16 1.13,-1.41 -0.08,-0.83 -0.59,0.19 -0.48,-0.72 0.9,-1.17 -0.7,-2.3 1.06,-0.25 0.4,-1.08 -1.3,-0.52 z\"\n  }, {\n    \"id\": \"es-j\",\n    \"name\": \"Jaén\",\n    \"d\": \"m 201.14737,214.11734 2.74,1.41 2.46,-0.55 0.8,0.79 -0.15,2.99 2.7,0.63 -0.05,3.8 1.49,1.09 -0.3,3.39 -3.22,3.92 0,0 -1.69,0.87 0.02,2.49 -1.99,1.41 -0.73,-0.51 -0.87,0.46 -1.91,1.76 -2.92,6.08 -0.73,0.34 0.07,2.39 0.54,0.31 -2.88,1.83 -0.01,1.2 -2.25,-0.6 -1.23,0.84 -2.47,-1.79 -1.34,-0.05 -1.43,0.19 -1.06,1.98 -3.14,0.92 -3.29,-2.05 -3.7,3.42 -4.58,2.01 -0.28,-0.56 -1.71,4.03 -3.37,0.3 -1.53,-0.91 0,0 -1.45,-2.54 -1.2,-0.69 0.84,-0.75 -1.17,-0.23 -2.33,-3.8 -1.45,-0.48 -0.21,-0.66 1.95,-1.62 -0.58,-0.98 -1.69,-0.5 0.98,-2.27 -2.46,-0.69 0.85,-5.35 -0.72,-3.42 0.69,0.03 -0.28,-0.68 0.87,-0.26 -0.36,-0.61 1.17,-1.05 -0.12,-0.83 1.74,-1.33 -1.06,-3.61 -0.63,-0.35 0.2,-2.14 -0.88,-0.54 0.04,-1.02 -0.96,-0.22 0,0 -0.24,-1.7 0.64,-0.43 3.06,0.8 7.47,0.48 1.79,-0.24 0.74,-1.47 1.37,-0.48 5.74,1.04 0.47,-2.06 1.25,0.22 0.43,1.45 2.31,0.33 2.34,-1.54 0.05,-1.39 1.49,-0.27 1.43,0.85 4.6,0.84 2,-1.54 1.91,2.73 0.28,-1.63 0.92,-0.83 1.77,0.06 0.75,0.67 z\"\n  }, {\n    \"id\": \"es-l\",\n    \"name\": \"Lleida\",\n    \"d\": \"m 307.82737,39.567342 4.41,1.41 2.09,1.51 1.05,-0.65 0.73,0.8 2.86,-0.07 2.85,3.32 1.82,-0.85 0.67,0.57 3.26,-0.24 -0.11,0.85 1.08,0.55 1.61,3.64 -0.45,0.67 0.53,0.68 -0.95,1.29 0.92,-0.29 0.78,1.32 -1.54,1.12 0.67,0.35 0.28,1.55 3.15,0.19 0.26,-1.05 0.6,0.36 0.52,-0.73 1.84,-0.05 0.4,-1.47 1.02,0.6 0.7,-0.63 0.14,0.52 0,0 0.03,2.16 2.14,0.64 0.14,2.27 0.73,-0.47 0.77,0.49 -0.61,0.58 0.23,2.03 0,0 -5.29,1.02 0.61,0.19 0.43,1.69 -0.73,1.23 1.76,0.7 0.04,0.53 -1.24,1.68 0.72,1.84 -0.94,0.17 -0.52,1.15 -0.07,0.75 0.63,-0.21 0.22,0.68 -1.03,1.07 -0.31,-0.72 -0.25,0.85 1.52,0.62 0.01,-1.21 0.66,1.24 -1.12,0.7 -0.23,-0.62 -0.77,0.12 0.09,2.09 -2.58,2 1.54,-0.06 0.34,0.93 -1.27,2.25 0.14,1.07 -0.64,-0.17 -1.28,1.21 -0.79,-1.45 -1.34,0.46 0.31,-0.99 -1.66,0.26 -0.43,2.02 0.67,0.51 -1.32,1.11 2.09,2.42 -2.78,1.35 1.44,0.53 -0.42,1.04 0,0 0.33,0.69 -5.63,-0.47 -0.28,0.86 -1.41,0.58 0.5,1.89 -2.11,0.86 -2.22,-1.39 -0.07,0.86 1.16,0.82 -1.48,2.04 -1.39,0.719998 -0.53,1.5 -3.1,0.71 -0.57,-0.97 -0.77,1.35 -1.79,-0.2 -0.3,0.65 -3.79,1.09 -0.96,-0.1 -1.3,-1.35 -0.9,1.49 -0.67,0.02 -1.29,-1.84 -0.81,0.58 -0.05,1.81 -1.46,-0.11 0,0 -1.14,-2.07 0.77,-0.84 -1.65,-1.809998 0.46,-0.54 0,0 0.63,-1.77 -0.41,-1.31 1.71,-0.3 1.51,-2.08 -0.56,-2.46 -2.42,0.12 0.26,-1.32 -0.91,-2.02 1.73,-2.43 0.33,0.34 0.1,-1.06 2.18,-0.32 0.42,-1.47 1.82,-0.78 0.46,-1.39 0.7,0.14 0.84,-0.88 -0.44,-0.5 0.45,-1.43 -1.4,-0.78 2.93,-2.61 -0.17,-1.01 1.91,-5.65 -0.35,-1.1 1.9,-5.47 -0.74,-0.59 0.95,-0.57 -1.47,-0.62 0.7,-0.79 -1.71,-4.26 1.44,-0.74 -0.55,-0.83 0.86,-0.41 0.55,-3.17 -1.81,-0.41 -1.48,-2.9 0,0 0.67,-0.75 -0.57,-1.69 -0.74,-0.21 0.89,-0.83 -0.72,-0.35 0.81,-0.95 -0.39,-1.29 1.71,-0.95 z\"\n  }, {\n    \"id\": \"es-le\",\n    \"name\": \"León\",\n    \"d\": \"m 137.35737,26.137342 -0.32,2.3 2.61,2.15 0.01,0.79 0.68,-0.04 0.22,1.48 0,0 -1.77,1.44 -0.44,2.35 -1.73,2.91 -1.09,0.13 0.16,3.01 -1.24,1.7 1.98,1.52 -0.88,1.61 -0.45,4.53 0.84,0.96 -0.37,3.58 -0.73,0.6 0.58,0.48 0.05,1.58 -2.13,0.5 -0.36,1.51 1.28,-0.36 -0.17,1.48 -0.78,0.92 -0.88,-0.02 0,0 -1.11,-0.33 -0.5,1.64 -1.75,-2.24 -2.17,1.97 -1.65,-0.38 -0.54,1.39 0.81,0.41 -0.42,0.64 -0.74,0.15 -0.65,-0.79 -0.63,1.27 -1.65,-1.07 -0.82,0.15 0.36,7.42 0,0 -1.39,0.44 0,0 -1.82,-0.89 -1.23,-1.84 0,0 -0.69,-0.09 -0.29,1.47 -1.04,0.53 -0.06,-1.09 -1.4,-0.17 0.45,-0.97 -1.47,-1.53 -0.6,0.16 0.31,0.74 -2.04,0.28 -0.82,-0.93 -2.3,1.04 -1.61,-1.87 -0.43,0.64 -1.12,-0.05 -0.16,0.75 -2.31,-1.4 -4.03,-0.34 -1.6,0.73 -2.5,-1.24 -0.58,-1.18 -3.54,0.19 -2.14,0.82 -0.87,-0.88 -2.68,0.01 -0.78,-0.58 -2,0.33 -2.47,-1.83 0,0 1.33,-1.86 0.22,-2.5 -3.36,-1.93 0.89,-0.87 -0.25,-2.65 -1.14,0.09 -2.21,-1.32 -0.86,0.12 -0.58,1.02 -3.01,-0.62 0,0 0.25,-1.92 1.07,-1.23 -0.4,-2.02 1.31,-0.42 -1.25,-2.16 1.05,-1.2 1.17,-0.06 0.41,-1.25 0.73,0.59 2.09,-1.93 0.83,-1.51 -0.95,-2.1 1.15,-0.34 0.58,0.47 -1.02,-1.81 0.73,-0.03 0,0 2.07,1.34 1.04,-1.44 0.97,-0.2 6.17,0.09 1.74,-0.81 -0.02,-1.02 -1.21,-0.15 -0.13,-1.01 1.61,0.18 0.43,-1.23 0.51,0.01 -0.08,-0.91 1.17,-0.89 1,1.18 1.27,-0.21 1.79,1.15 0.4,-1.58 1.09,-0.05 1.24,1.09 1.22,-0.4 0.46,-1.89 1.89,0.87 1.41,-0.42 0.53,1.94 1.29,1.08 3.39,1.26 1.26,-0.36 1.06,-2.98 1.08,-0.58 3.78,1.41 2.34,0.06 0.47,-1.4 2.7,0.23 0.65,-1.89 2.67,0.72 1.9,-0.26 2.22,-1.32 1.41,0.56 0.79,-3.34 2.42,0.35 1.01,-1.65 1.58,-1.02 1.2,0.3 1.03,2.04 z m -15.53,38.35 0.57,-0.62 0.82,0.2 -0.05,0.71 0,0 -0.99,0.87 -0.35,-1.16 z\"\n  }, {\n    \"id\": \"es-lo\",\n    \"name\": \"La Rioja\",\n    \"d\": \"m 196.49737,74.237342 -0.54,-2.63 -3.16,0.03 -2.92,-4.68 1.25,-1.91 -0.63,-4.39 1.4,-0.17 -0.65,-1.21 -0.6,0 0.09,-1.3 0.71,0.04 0.63,1.89 -0.17,-2.27 0.53,-0.84 -1.5,-1.78 0.71,-1.64 -1.92,-0.6 2.28,-1.95 -0.74,-2.14 4.22,0.06 0.94,0.82 1.77,-0.78 0,0 0.5,1.23 0.68,-0.24 -0.64,1.36 0.48,1.11 1.45,-1.12 0.43,-1.7 2.55,1.18 -0.76,3.22 0.91,-0.37 0.86,1.76 1.3,-0.84 0.26,1.27 0.9,-0.88 1.16,0.42 0.61,-1.49 -0.15,1.24 2.89,0.03 0,0 2.29,1.57 0.43,-0.69 1.06,0.44 0.29,-0.41 2.2,2.14 3.22,-0.16 -0.13,0.83 1.12,1.27 -0.33,0.91 2.89,-0.69 0.97,1.23 1.4,0.28 0.12,1.08 1.34,0.49 -0.06,1.49 0.73,-0.24 1.5,1.49 2.29,0.34 1.35,0.91 -0.6,0.8 0.66,0.88 -1.24,0.75 -0.61,-0.67 -1.29,0.5 -1.22,-0.66 -2.18,2.83 -0.27,2.28 1.67,0.89 0,0 -0.29,1.71 0,0 -1.8,1.41 -2.05,0.53 -1.42,-1.39 -0.25,0.56 -2.26,-0.76 -0.43,-1.54 0.5,-0.3 -1.66,-2.64 1.07,-0.58 -0.01,-0.67 -2.5,-0.31 -1.87,0.66 -0.38,-1.77 -1.54,-0.59 -3.26,0.36 -1.41,1.27 -0.93,-0.34 0,1.88 -1.05,0.72 -0.95,2.27 -5.1,-0.51 -0.35,-0.98 1.58,-2.88 -0.99,-0.92 -1.63,0.66 -0.65,2.97 -2.18,1.12 z\"\n  }, {\n    \"id\": \"es-lu\",\n    \"name\": \"Lugo\",\n    \"d\": \"m 51.52737,2.0173425 0.26,1.39 0.71,0.09 -0.24,1.67 0.61,0.4 0.26,-1.77 1.79,-1.07 0.38,0.71 0.76,-0.55 0.97,0.68 -0.6,0.14 0.22,0.44 3.48,1.32 1.93,3.37 1.5,0.67 -0.65,1.5099995 0.91,-1.2099995 6.01,0.5199995 -0.34,3.48 0,0 -1.54,2 -2.15,-0.14 -0.28,1.62 1.68,0.82 -0.1,1.78 0.9,1.1 1.27,-0.05 -0.06,2.57 1.27,1.29 0.32,-0.4 1.18,0.78 -0.3,1.57 0.72,1.32 2.21,-0.89 0.72,-1.07 1.24,1.64 -1.53,2.18 -1.36,0.75 -0.69,-0.56 -0.86,1.06 0.05,1.12 -0.53,-0.28 -0.47,0.92 1.07,1.21 0.3,-1.28 1.29,1.3 1.18,0.05 1.1,1.3 -0.18,1.24 0.54,0.55 0,0 -0.73,0.03 1.02,1.82 -0.58,-0.47 -1.15,0.34 0.95,2.1 -0.83,1.51 -2.09,1.93 -0.73,-0.59 -0.41,1.25 -1.17,0.06 -1.05,1.2 1.25,2.16 -1.31,0.42 0.4,2.02 -1.07,1.23 -0.25,1.92 0,0 -0.7,2.06 -1.59,1.08 -1.56,4.42 -0.87,-1.38 0.33,-1.16 -2.67,-1.75 -1.93,0.34 -0.9,-0.59 -3.13,1.94 -1.22,0.18 -1.04,-0.85 -1.28,0.85 -2.96,-2.82 -2.32,-0.56 1.25,-0.58 -0.5,-0.57 -1.08,0.57 -2.32,-1.28 -1.16,0.11 0.36,-0.54 -0.69,-0.15 1.04,-1.04 -1.25,-1.18 0,0 1.17,-2.12 0,-2 0.96,-1.19 -3.59,-3.03 0.68,-2.53 -1.33,-0.38 0,0 2.81,-4.27 -1.07,-4.87 0.8,-0.86 -1.37,-4.26 1.21,-3.34 -0.77,-0.69 1.82,-2.11 -0.1,-2.61 2.08,-0.1 0.49,-1.54 0.83,-0.49 1.09,-2.66 -0.13,-2.7699995 0.95,-0.27 -0.54,-1.57 1.36,-1.41 -0.87,-1.38 0.51,0.04 -0.14,-1.03 0,0 0.55,0 0.12,-0.83 1.47,-1.05 z\"\n  }, {\n    \"id\": \"es-m\",\n    \"name\": \"Madrid\",\n    \"d\": \"m 154.71737,129.07734 0.54,0.92 -1.91,0.24 0,0 0.07,-0.78 1.3,-0.38 z m 22.57,-19.77 1.59,2.88 1.91,0.43 -0.38,1.66 1.34,1.72 -0.72,0.51 -0.81,3.21 -0.48,-0.01 0.59,1.3 -0.99,0.47 -0.09,1.54 -1.05,1.52 1.37,0.18 0.69,0.95 -0.23,0.92 0.52,0.29 -1.02,1.66 1.92,0.79 0.36,-0.91 1.67,2.26 0.66,-0.71 -0.62,1.16 0.22,1.13 1.45,1.04 -0.42,1.37 1.45,-0.26 1.51,1.17 0.06,2.91 1.31,0.13 0.78,1.37 -2,6.31 0.69,0.55 1.95,-2.05 1.28,5.11 0,0 -0.63,-0.21 -0.26,0.81 1.24,1.17 -0.13,0.91 -1.75,1.15 -1.33,-0.14 0,0 -0.42,-1.03 -0.92,1.28 -2.2,0.46 -1.77,-1.36 -1.31,0.26 -0.53,1.59 -3.46,-0.51 -0.39,1.09 -2.14,0.3 -1.49,0.99 0.1,0.9 -3.37,1.02 -1.81,2.23 -2.02,-0.8 -0.19,-0.96 1.13,-0.54 0.22,0.48 0.22,-0.66 1.16,0.01 0.68,-0.79 -0.16,0.7 0.45,-0.04 -0.18,-0.83 1.08,0.18 -0.62,-0.57 3.86,-3.01 0.43,-2.11 -1.85,-1.38 -0.74,0.43 -0.91,-0.61 -0.75,0.61 -1.87,-1.79 -0.89,0.65 -1.26,-1.19 -1.68,-0.51 -0.56,0.59 -0.11,-0.93 -1.21,0.1 -0.96,-1.58 -1.46,-0.63 -1.01,0.92 -1.21,-0.13 -0.01,-0.77 -1.45,-1.31 -0.38,1.12 -1.29,-0.19 -0.78,1.62 -1.54,0.32 -0.82,-0.46 -0.27,-2.93 -0.74,-0.35 -0.09,1.17 -1.58,1.2 -0.05,0.87 -3.02,1.53 -1.32,-0.71 0,0 0.56,-0.21 -0.26,-1.38 1.23,-1.42 -0.53,-1.98 0.62,-0.11 0.68,1.2 1.5,-0.19 1.03,-3.47 3.1,-0.17 -0.6,-0.74 0.74,-1.46 -0.37,-2.79 1.19,-1.19 -0.01,-2.56 1.46,1.03 2.49,-0.85 0.03,-2.68 0,0 2.77,-4.19 2.77,0.39 1.29,-5.78 1.31,-1.61 3.48,-1.35 1.31,-2.17 1.92,-1.32 1.94,-2.54 2.16,-0.69 z m 5.34,21.26 -0.17,0.58 0,0 -0.34,-0.19 0,0 0.51,-0.39 z\"\n  }, {\n    \"id\": \"es-ma\",\n    \"name\": \"Malaga\",\n    \"d\": \"m 143.11737,263.56734 1.22,0.03 0.35,1.76 1.93,-0.08 1.47,-0.62 0.19,-0.94 1.28,-1 1.86,0.02 0.33,2.36 1.53,0.44 -0.15,0.78 0,0 1.24,2.48 0.45,4.01 1.26,-0.08 1.99,2.29 2.05,0.17 1.61,1.88 3.62,0.79 1.9,1.23 1.24,-0.18 1.81,2.05 -0.28,2.48 0,0 -2.06,-0.62 -3.45,1.04 -3.59,-0.85 -1.09,0.9 -2.13,0.36 -6.63,-0.29 -3.55,4.92 -2.85,1.16 -1.09,2.17 -3.08,0.89 -3.69,-0.94 -2.3,0.28 -2.19,1.55 -2.31,0.32 -2.96,1.4 -2.28,3.91 0,0 -0.78,-0.99 -1.3,0.46 -0.83,-3.55 -2.61,-4.39 -1.86,-0.07 -0.96,1.46 -2.58,-0.55 -0.11,-1.11 0.51,-0.35 2.24,0.73 1.88,-2.17 0.15,-1.17 2.36,-0.5 1.69,-1.55 -0.02,-1.93 1.03,-1.95 -1.53,-1.69 1.2,-1.92 0.98,-0.56 3.05,2.32 1.11,-0.57 1.45,-2.54 -0.72,-2.07 0.45,-0.34 -1.44,-1.36 0,0 0.6,-0.91 2.14,-0.11 4.44,-3.22 0.15,-0.92 -1.21,-0.72 0.09,-0.69 1.06,-0.24 0.23,0.99 0.68,-0.08 0.66,-1.55 0.86,-0.08 0.97,1.81 2.63,-1.69 -0.76,-2.01 2.45,-0.29 z\"\n  }, {\n    \"id\": \"es-ml\",\n    \"name\": \"Melilla\",\n    \"d\": \"m 79.02737,413.15734 1.53,0.74 -0.48,2.58 2.03,1.72 1.18,2.3 1.11,0.89 1.84,0.2 0.35,0.92 -0.09,0.63 -0.35,-0.97 -0.86,0.28 -0.69,-0.83 -1.57,0.8 0.49,1.23 -0.81,0.29 0.06,1.86 1.35,2.04 1.29,0.41 -0.58,1.14 -2.38,1.32 -2.78,0.52 -2.15,-2.76 -3.39,-2.61 0.2,-1.8 -1.05,-2.7 2.66,-7.57 2.47,-1.67 z\"\n  }, {\n    \"id\": \"es-mu\",\n    \"name\": \"Murcia\",\n    \"d\": \"m 214.04737,233.84734 0.36,-1.53 2.09,-1.85 1.48,-3.45 3.06,-1.42 1.99,-2.63 1.93,0.94 2.41,-0.63 3.78,-2.27 -0.35,-0.55 1.6,-0.43 1.72,0.6 -0.15,1.1 0.69,0.98 2.47,0.04 3.41,-2.54 -0.61,-6.07 0.34,-1.22 1.07,-0.73 0.14,-2.64 1.4,-1.64 1.09,-0.51 0.73,1.05 2.87,-2.38 2.01,-0.63 1.96,0.65 0.13,1.08 2.76,2.13 0,0 0.75,3.24 -0.76,1.97 0.38,0.99 -2.46,2.29 0.3,3.58 2.93,1.01 0.66,1.88 -0.65,2.83 -1.47,2.42 0.19,1.57 3.99,6.75 2.15,2.28 2.08,0.67 0,0 0.43,2.21 -0.65,-1.75 -2.77,4.49 1.67,2.3 2.39,0.98 -1.03,-5.96 0.5,0.16 1.34,5.95 -0.5,0.92 -3.19,1.23 -1.74,-0.13 -1.26,0.93 -1.28,-0.19 -0.71,-0.98 -1.02,0.45 -1.75,-0.43 -1.61,1.35 0.5,0.58 -1.72,-0.32 -0.2,-0.77 -1.26,-0.5 -0.96,-0.05 -0.34,0.74 -2.11,-0.2 -4.13,2.95 -0.67,2.36 -1.1,-0.27 -3.44,2.19 0,0 -3.28,-2.61 -2.29,-0.34 0.09,0.7 -1.11,-0.82 -4.04,-6.32 -1.1,-3.17 0.52,-1.05 -0.11,-3.68 0.77,-1.75 -2.94,-0.62 -0.43,0.47 -1.19,-1.09 -1.5,0.46 -1.09,-1.08 0,0 -4.16,-4.27 z\"\n  }, {\n    \"id\": \"es-na\",\n    \"name\": \"Navarra\",\n    \"d\": \"m 235.27737,20.707342 0.76,0.14 0.52,2.29 1.02,0.08 0.33,-1.61 0.89,-0.23 2.97,1.16 0.76,-0.3 0.9,0.84 0.05,2.71 -0.99,2.53 -1.8,1.77 0.99,1.69 2.69,0.76 0.27,-2.79 2.29,-0.99 -1.18,2.05 1.38,1.05 1.58,-0.3 2.06,1.07 0.11,0.76 0.8,-0.65 1.33,1.06 1.97,0.29 1.93,1.56 1.15,-0.45 3.03,0.54 1.75,-0.66 0.74,2 0,0 -1.71,-0.1 -1.1,0.88 0.02,1.31 -1.17,0.93 0.28,2.54 -0.79,1.13 -0.84,-0.07 -0.01,0.74 0,0 0,0 0,0 -0.68,-0.05 -1.41,1.68 -1.81,0.15 -0.77,2.4 -3.05,-0.22 -0.16,1.54 -0.68,0.11 0.67,0.35 -1.34,0.88 -0.03,1.19 -0.72,0.31 -1.18,-0.61 -0.72,1.41 0.47,1.68 -2.11,2.42 -0.56,1.89 0.94,0.95 -2.14,2.65 -0.57,3.28 0.79,1.33 -0.22,2.2 1.43,2.19 1.28,0.03 0.18,1.21 -3.25,5.1 -4.53,0.21 -2.94,-2.12 -1.87,0.35 -1.59,-1.6 -2.05,0.03 -0.41,-0.53 0,0 -1.67,-0.89 0.27,-2.28 2.18,-2.83 1.22,0.66 1.29,-0.5 0.61,0.67 1.24,-0.75 -0.66,-0.88 0.6,-0.8 -1.35,-0.91 -2.29,-0.34 -1.5,-1.49 -0.73,0.24 0.06,-1.49 -1.34,-0.49 -0.12,-1.08 -1.4,-0.28 -0.97,-1.23 -2.89,0.69 0.33,-0.91 -1.12,-1.27 0.13,-0.83 -3.22,0.16 -2.2,-2.14 -0.29,0.41 -1.06,-0.44 -0.43,0.69 -2.29,-1.57 0,0 -0.05,-0.93 0.92,-0.21 -0.14,-3.41 -0.75,-0.34 -0.98,1.66 -0.28,-0.84 -0.87,0.09 -0.29,-1.3 0.52,0.18 2.07,-2.1 1.21,0.5 -0.17,0.68 2.86,-0.86 -1.08,-2.87 0.21,-0.64 1.67,-0.37 -0.57,-1.53 1.49,-2.45 -0.56,-2.16 0,0 1.24,-2.27 0.9,0.62 1.58,-0.18 1.05,-1.38 1.75,-0.36 0.48,-3.52 3.7,-2.94 -0.56,-0.61 0.13,-3.06 1.05,0.68 0.44,-0.99 0.22,0.76 2.01,-1.45 0.36,-1.68 1.66,-0.39 0,0 z\"\n  }, {\n    \"id\": \"es-o\",\n    \"name\": \"Asturias\",\n    \"d\": \"m 106.70737,5.9073425 0.93,1.36 0.88,0 -0.31,0.63 1,1.19 1.28,0.74 0.57,-0.3 0.18,1.3699995 1.44,0.13 0.78,-0.75 3.85,0.6 2.61,-0.44 1.7,1.01 1.7,-0.22 2.57,2.62 2.84,-0.48 2.66,1.02 3.37,-0.08 8.36,2.6 4.34,0.33 0,0 -0.81,1.59 0.47,3.25 -0.74,0.4 -0.23,-0.81 -1.57,-0.52 -0.78,1.38 -3.04,0.43 -0.23,2.98 -3.15,0.24 0,0 -1,-2.05 -1.19,-0.3 -1.57,1.02 -1.01,1.65 -2.42,-0.35 -0.79,3.34 -1.41,-0.56 -2.22,1.32 -1.9,0.26 -2.67,-0.72 -0.65,1.89 -2.7,-0.23 -0.47,1.4 -2.34,-0.06 -3.78,-1.41 -1.07,0.58 -1.06,2.98 -1.26,0.36 -3.39,-1.26 -1.29,-1.08 -0.53,-1.94 -1.41,0.42 -1.89,-0.87 -0.46,1.89 -1.3,0.37 -1.28,-1.12 -1.09,0.05 -0.4,1.58 -1.79,-1.15 -1.26,0.21 -1,-1.18 -1.16,0.89 0.08,0.91 -0.51,-0.01 -0.43,1.23 -1.6,-0.18 0.13,1.01 1.21,0.15 0.02,1.02 -1.74,0.81 -6.17,-0.08 -0.97,0.2 -1.04,1.44 -2.07,-1.33 0,0 -0.54,-0.55 0.18,-1.24 -1.09,-1.3 -1.18,-0.05 -1.29,-1.3 -0.3,1.28 -1.07,-1.21 0.47,-0.92 0.53,0.28 -0.05,-1.12 0.86,-1.06 0.69,0.56 1.36,-0.74 1.53,-2.18 -1.24,-1.63 -0.72,1.07 -2.21,0.89 -0.72,-1.31 0.3,-1.57 -1.18,-0.78 -0.32,0.41 -1.27,-1.29 0.06,-2.57 -1.27,0.05 -0.9,-1.1 0.1,-1.78 -1.68,-0.82 0.28,-1.61 2.15,0.14 1.54,-2 0,0 0.63,-2.26 0.76,-0.08 -0.74,-1.19 1.71,-0.02 0.85,-0.7299995 4.14,0.8699995 1.13,-0.6099995 2.97,0.4099995 1.58,-0.6699995 0.89,0.8999995 1.88,0.33 1.98,-0.14 0.05,-0.8999995 1.24,0.7599995 2.29,0.07 3.07,-1.1499995 0.34,-0.8 1.81,1.4299995 1.07,-0.2799995 1.06,0.6299995 2.99,-1.3799995 0.73,0.66 1.03,-0.22 1.36,-1.11 0.07,-0.87 1.51,-0.3 0.76,-1.27 z\"\n  }, {\n    \"id\": \"es-or\",\n    \"name\": \"Ourense\",\n    \"d\": \"m 42.54737,51.267342 1.25,1.18 -1.05,1.04 0.69,0.15 -0.35,0.54 1.16,-0.11 2.32,1.29 1.08,-0.57 0.5,0.57 -1.25,0.58 2.32,0.56 2.97,2.83 1.28,-0.86 1.04,0.85 1.22,-0.18 3.13,-1.94 0.9,0.59 1.93,-0.34 2.67,1.75 -0.34,1.16 0.87,1.39 1.56,-4.42 1.59,-1.08 0.7,-2.06 0,0 3.01,0.62 0.58,-1.02 0.86,-0.11 2.21,1.32 1.15,-0.09 0.25,2.65 -0.89,0.87 3.36,1.93 -0.22,2.5 -1.32,1.87 0,0 -0.58,0.61 0.49,0.95 -1.73,-0.52 -1.33,0.58 -0.44,1.02 -1.3,0.71 -0.39,1.77 -1.03,0.34 -0.41,1.54 -0.93,0.39 0.64,0.89 1.16,-0.1 0.42,1.15 -0.69,2.23 0,0 -0.7,0.92 -1.9,0.07 -1.56,-1.55 -1.81,0.27 -0.35,1.57 0.49,0.94 -0.71,1.6 -3.64,1.54 -1.55,-0.42 -1.9,1.86 -0.76,-2.37 -1.53,-0.17 -0.57,1.12 -2.78,0.53 0.79,-2.16 -2.09,0.02 -1.44,-1.08 -4.43,1.08 -0.85,1.49 -0.59,-0.6 0.23,-2.66 -0.67,-0.11 -0.45,2.02 -2.04,0.35 -0.81,1.66 -3.59,0.82 -1.04,-0.38 -0.14,-2.4 -0.94,0.12 -0.52,-1.62 1.66,-2.86 2.36,-1.39 0.05,-1.27 -1.05,-1.44 -1.95,0.71 -0.53,-3.67 0,0 1.18,-1.03 -0.96,-1.24 0.87,-0.53 0.07,-0.91 -2.19,0.43 -0.97,-0.79 0.09,-2.57 -1.93,-1.24 0.31,-1.49 -1.59,-4.41 1.95,-0.11 3.96,-3.4 0.83,0.97 1.76,-0.37 2.24,0.62 0.74,-1.24 z\"\n  }, {\n    \"id\": \"es-p\",\n    \"name\": \"Palencia\",\n    \"d\": \"m 160.81737,68.257342 0.43,1.5 -1.47,-0.48 -0.05,-0.63 1.09,-0.39 z m -0.39,-26.2 -0.61,-0.13 0.06,-1.03 0.55,1.16 z m 1.33,1.39 1.3,-2.7 0.12,2.6 0,0 -1.42,0.1 z m -21.21,-10.62 3.03,0.18 0.98,-0.8 1.46,0.68 1.15,-1.17 1.39,0.36 0.86,-0.83 1.52,0.99 1.56,2.62 3.34,0.74 0.6,4.34 0.6,0.24 1.69,-0.99 0.48,0.93 -1.66,1.5 1.01,0.88 1.58,-0.08 0.53,1.24 0,0 -0.87,1.15 -1.12,-0.76 -3.4,2.66 -0.3,-0.71 -0.81,0.6 0.9,3.03 -0.88,0.5 0.67,1.02 -1.06,0.44 0.06,0.64 0.79,0.44 -0.26,1.36 1.2,0.72 0.14,1.6 -2.29,-0.11 -0.55,1.62 0.41,1.66 1.5,-0.24 1.27,7.33 1.31,1.32 -0.51,1.72 1.94,0.62 0.65,-0.36 1.99,1.13 -0.65,0.75 -0.78,-0.18 0.71,2.07 1.25,-0.68 1.74,0.08 0.35,0.75 -1.34,1.43 -0.56,1.83 4.34,-1.75 -0.03,1.61 -1.36,0.02 -1.37,1.08 0.02,1.24 -1.74,1.14 -1.57,0.09 -0.04,1.63 1.6,1.68 -0.09,0.88 0,0 -1.8,-0.25 -0.73,-1.35 -2.82,0.32 -0.64,-0.59 -2.5,2.07 -2.27,-0.98 -1.92,1.15 -1.44,-0.5 0.43,-2 0.8,-0.01 -0.37,-0.93 -1.19,0.81 -1.14,-0.32 -0.52,0.76 -3.18,-3.61 -3.67,3.39 -2.45,-4.67 -1.81,0.69 -0.66,-0.77 -1.05,0.98 -0.66,-1.53 1.21,-2.46 0.91,-0.45 -0.42,-1.36 1.4,-1.13 -0.72,-2.96 -3.05,-0.15 0.76,-5.58 0,0 0.88,0.02 0.78,-0.92 0.17,-1.48 -1.28,0.36 0.36,-1.51 2.13,-0.5 -0.05,-1.57 -0.58,-0.48 0.74,-0.6 0.37,-3.58 -0.84,-0.96 0.45,-4.53 0.88,-1.61 -1.98,-1.52 1.24,-1.69 -0.16,-3.01 1.09,-0.13 1.73,-2.91 0.44,-2.35 1.75,-1.48 z\"\n  }, {\n    \"id\": \"es-pm\",\n    \"name\": \"Baleares\",\n    \"d\": \"m 329.49737,204.00734 0.8,2.25 0.81,0.2 0.63,1.49 1.16,0.67 1.2,-0.72 0.45,1.12 -0.43,0.51 -3.67,-1.36 -2.04,1.73 -0.17,-3.08 1.49,-0.76 -0.23,-2.05 z m 3.46,-12.88 0.78,1.02 1.42,0.08 -0.51,1.13 1.02,1.39 -1.14,0.45 -0.07,1.05 -1.47,0.24 -0.15,1.47 -1.6,1.29 -1.71,0.36 -0.47,2.9 -0.64,-0.49 -0.43,0.56 -0.82,-1.67 -0.76,0.58 -1.47,-0.9 -0.7,0.93 -0.77,-0.6 -0.34,-1.29 0.7,-1.41 -0.65,-0.76 0.44,-0.64 2.41,0.06 -0.71,-0.76 0.18,-1.4 2.11,-1.79 0.54,0.44 0.37,-0.66 0.88,0.07 0.23,-0.57 0.49,0.44 0.71,-0.89 1.08,0.16 1.05,-0.79 z m 51.55,-33.43 -0.36,0.78 -3.74,1.66 0.73,1.75 3.1,-1.29 -0.9,2.07 -1.66,0.18 0.57,2.19 3.52,1.96 2.34,-1.23 0.55,-1.17 2.61,1.78 0.89,-0.13 -0.29,1.05 0.83,0.24 -0.68,0.4 -0.61,2.86 -1.21,0.2 -0.38,1.41 0.59,0.57 -0.77,0.1 -2.52,3.05 -0.66,3.31 -1.31,2.15 -3.51,1.97 -1.37,1.71 -0.72,0.12 -1.09,-1.78 -0.85,-0.21 0.16,-0.83 -1.05,-1.06 -1.34,0.44 -0.98,-0.53 -2.91,0.12 -1.4,-1.74 0.15,-1.41 -0.76,-1.32 0.84,-1.37 -2.35,-1.96 -0.85,-0.21 -1.65,1.34 -1.57,0.28 -0.53,2.68 -0.97,-0.65 -0.53,0.31 -0.51,-2.78 -1.13,0.48 -0.19,-0.63 -0.77,0.73 -0.03,-0.53 -0.75,0.09 0.27,-0.48 -0.78,-0.83 0.49,-1.81 3.07,-1.66 1.98,-1.96 1.78,-0.6 2.67,-3.11 0.68,0.15 0.14,-0.79 2.42,-1.78 2.05,-0.24 3.28,-2.31 1.08,0.42 1.68,-1.12 2.48,0.22 1.31,-1.11 1.42,-0.14 z m 26.63,-5.13 0.57,0.24 0.14,1.62 0.64,-0.51 0.07,1.23 0.28,-1.65 0.57,-0.02 0.56,0.3 -0.37,1.14 0.7,0.41 0.24,-0.53 0.87,1.52 1.54,0.02 -0.47,1.31 0.8,0.5 0.92,2.82 -0.19,1.97 -0.72,0.82 -2.26,-0.56 -6.69,-4.24 -5.13,0.33 0.23,-2.8 -1.07,-0.25 -0.13,-0.61 0.97,-1.46 3.46,-0.45 1.36,0.47 1.48,-0.6 0.81,0.6 0.67,-0.34 0.15,-1.28 z\"\n  }, {\n    \"id\": \"es-po\",\n    \"name\": \"Pontevedra\",\n    \"d\": \"m 18.11737,47.167342 0.29,-1.22 2.04,-0.95 1.36,0.58 0.21,-1.16 1.39,-0.15 -0.06,-0.58 2.66,0.71 1.93,-0.44 0.45,-1.46 1.16,0.43 0.68,-0.64 -0.23,-1.94 0.41,0.39 0.32,-0.61 1.11,1.46 0.74,-1.06 1.38,0.53 -0.32,-0.86 1.14,-0.66 2.07,0.79 1.37,-0.47 0.79,0.87 1.42,-0.73 0,0 1.33,0.38 -0.68,2.53 3.6,3.03 -0.96,1.19 0,2 -1.17,2.12 0,0 -1.88,0.25 -0.74,1.24 -2.24,-0.62 -1.76,0.38 -0.83,-0.97 -3.95,3.39 -1.95,0.12 1.59,4.41 -0.31,1.49 1.93,1.24 -0.08,2.57 0.97,0.8 2.19,-0.44 -0.07,0.91 -0.87,0.54 0.95,1.24 -1.18,1.03 0,0 -3.77,2.16 -0.29,0.74 -5.77,0.18 -0.8,1.04 -2.76,0.26 -0.81,1.87 -2.52,1.51 -0.37,1.35 -3.65,2.57 -0.77,-9.95 1.47,-0.64 1.16,0.53 -0.18,-1.11 -0.91,-0.6 0.81,0.06 0.28,-1.4 4.94,-4.09 1.2,0.09 -0.56,-2.81 -0.12,1.14 -0.78,0.59 0.31,0.59 -1.17,0.75 -1.29,-0.28 -1.85,1.66 -0.67,-0.64 -1.81,0.47 0.49,-2.43 1.25,1.26 -0.63,-2.55 2.06,0.32 1.37,-2.18 2.12,-1.67 -0.77,0.18 -0.43,-0.66 -2.4,2.04 -1.26,-0.55 -0.74,0.72 -1.31,-1.28 -0.01,-1.69 -0.95,-0.31 -0.49,0.58 -0.49,-0.6 0.22,-0.67 0.91,0.21 1.13,-1.09 0.48,1.2 -0.39,1.04 1.46,-0.22 -0.31,-1.35 0.78,-0.65 -0.29,-1.01 -0.44,0.22 0,-2.32 1.04,-0.2 2.08,-4.04 z\"\n  }, {\n    \"id\": \"es-s\",\n    \"name\": \"Cantabria\",\n    \"d\": \"m 184.70737,25.057342 -0.21,-2.18 1.69,-0.04 -0.6,1.07 0,0 0.12,1.17 0,0 -1,-0.02 z m -8.83,-12.97 0.01,0.56 1.39,-0.07 -0.21,0.83 0.82,-0.57 0.28,0.98 2.57,0.64 -0.31,0.94 -0.78,-0.14 -0.33,-0.09 -0.44,-0.26 0.78,2.4 0.54,-1.3 0.69,0.51 3.05,-0.43 0.11,1.27 0.41,-0.85 2.57,0.56 0.33,0.92 1.81,0.91 0,0 -0.12,2.18 -1.6,0.75 -0.48,-1.07 -1.66,0.79 -1.63,-0.5 -0.24,1 -3.33,1.76 0.95,4.31 0,0 -5.7,-0.68 -0.27,-0.83 -1.18,-0.48 -1.65,2.71 -1.57,0.72 -0.03,0.59 -2.76,0.03 0.47,0.86 -0.53,0.95 -1.28,-0.03 -0.57,1.08 -1.11,0.43 -1.39,3.13 0.51,0.8 1.33,-0.12 -0.12,0.63 1.3,-1.08 0.12,-0.97 1.47,0.38 0.18,0.91 -1.07,0.79 -1.2,-0.64 0.46,1.13 -0.96,-0.08 0.83,0.37 -0.55,0.81 1.08,0.4 0.51,-1.6 0.83,0.46 0.64,2.85 -1.45,1 -0.95,-0.75 -0.51,1.51 -2.08,0.43 -0.64,-0.45 0,0 -0.12,-2.6 -1.3,2.7 0,0 -1.09,0.21 0,0 -0.53,-1.24 -1.58,0.08 -1.01,-0.88 1.66,-1.5 -0.48,-0.93 -1.69,1 -0.6,-0.24 -0.6,-4.33 -3.34,-0.74 -1.56,-2.62 -1.52,-0.99 -0.86,0.83 -1.39,-0.36 -1.15,1.17 -1.46,-0.68 -0.98,0.8 -3.03,-0.18 0,0 -0.21,-1.48 -0.68,0.04 -0.01,-0.79 -2.61,-2.15 0.32,-2.3 0,0 3.15,-0.23 0.23,-2.98 3.04,-0.43 0.78,-1.38 1.57,0.52 0.23,0.82 0.74,-0.4 -0.47,-3.25 0.81,-1.59 0,0 4.02,0.13 1.04,-0.69 0.62,0.68 3.26,-0.14 5.34,-2.19 0.32,0.49 0.44,-0.62 1.15,0.12 0.02,0.67 1.19,-1.73 4.95,-0.88 -0.11,0.66 0.76,0.36 -1.76,0.81 -0.28,0.66 0.77,0.16 -0.75,0.77 0.45,0.37 1.05,-0.82 -0.33,-0.46 0.6,-0.69 1.05,0.73 -0.31,-1.03 0.73,-0.73 3.34,-0.94 0.84,-0.88 z m -15.43,29.2 -0.38,1.02 -0.18,-1.41 0.56,0.39 z\"\n  }, {\n    \"id\": \"es-sa\",\n    \"name\": \"Salamanca\",\n    \"d\": \"m 87.06737,104.05734 4.98,0.94 5.62,3.28 2.22,-1.25 1.63,0.84 -0.4,1.83 1.31,-0.78 0.8,1.4 1.23,-1.55 -0.25,-1.62 0.72,-0.83 4.07,0.92 3.32,-1.21 0.88,1.27 1.24,0.49 0.7,-0.6 2.45,1.55 0.03,1.36 0.23,-1.33 2.12,-0.3 0.23,1.63 1.33,0.19 0.86,0.96 0.95,-0.35 0.28,-2.28 0,0 0.01,-0.56 1.41,-0.06 0.74,1.53 1.19,-0.32 1.68,1.44 0,0 -0.86,2.77 1.93,2.72 -0.46,1.47 -0.7,0.25 0.37,2.09 -1.48,1.37 0.07,2.2 -1.76,1.66 0.14,0.61 -5.25,3.48 0.6,0.92 -0.52,1.13 -1.99,1.65 -1.59,-0.08 -0.04,-0.63 -0.47,0.48 -0.26,1.8 2.66,-1.03 0.38,0.39 -1.23,3.64 -1.36,0.09 -0.53,1.66 -1.45,-0.88 0.42,-1.32 -2.25,0.67 -1.75,1.55 0.56,2.94 -1.98,2.19 0,0 -1.71,0.29 -0.13,-2.66 -2.66,1.06 -1.01,1.97 -1.58,-0.48 -1.47,-1.08 0.01,-0.95 -2.75,-0.67 1.25,-1.59 -1.98,-0.97 0.41,-0.84 -0.95,0.22 -0.33,-0.84 -2.25,-1.19 -3.48,1.76 -0.96,1.71 -1.32,0.04 -0.6,1.06 -3,1.03 -0.74,0.73 0.13,1.53 -0.95,0.8 -2.6,0.3 -0.56,0.83 -0.87,-1.07 -1.14,1.22 -2.42,-0.35 -0.94,-0.92 0,0 0.11,-1.16 2.06,-1.16 0.41,-1.44 -1.65,-1.74 -0.46,-1.76 1.67,-2.4 -0.17,-1.57 -1.37,-0.63 1.58,-3.84 -1.14,-3.69 0.15,-3.65 0.8,-0.22 -0.28,-1.36 -1.22,-0.81 -0.31,-1.92 -2.22,-3.22 3.76,-0.29 1.68,-2.74 -0.42,-1.25 1.8,-1.53 1.86,-3.05 2.37,0.35 1.49,-1.49 0.4,0.47 0.9,-0.38 z\"\n  }, {\n    \"id\": \"es-se\",\n    \"name\": \"Sevilla\",\n    \"d\": \"m 96.25737,237.13734 1.99,-1.58 4.96,-0.53 1.37,-2.62 -0.54,-1.61 2.3,-2.62 3.79,-0.99 1.03,0.42 0.32,1.15 -0.66,-0.48 0.34,0.74 -1.41,0.93 0.18,1.56 0.75,0.2 2.36,-2.22 1.49,0.25 0,0 2.74,3.47 0.07,1.81 2.38,2.02 0.02,2.86 2.15,1.15 -0.16,1.77 1.22,0.78 0.07,2.9 -0.6,0.29 -0.35,-0.57 -1.12,1.1 -0.4,-0.77 -0.73,0.55 0.56,1.03 -0.63,0.41 1.72,2.33 5.57,-3.66 0.82,0.76 1.29,-0.06 -0.67,-1.4 0.66,-0.06 0.32,1.16 0.84,0.37 -0.64,-0.74 0.58,-1.07 0.76,-0.4 1.47,0.45 1.41,2.09 -0.62,2.03 1.3,-0.67 -0.53,3.68 1.32,0.85 0.65,2.38 1.37,0.12 -0.3,0.93 1.07,1.26 -0.22,0.75 1.23,1.14 1.6,-0.26 0.32,-0.88 1,0.65 1.03,3.29 0,0 -2.46,0.22 0.76,2.01 -2.63,1.7 -0.97,-1.81 -0.86,0.08 -0.66,1.55 -0.68,0.08 -0.23,-0.99 -1.06,0.24 -0.09,0.69 1.21,0.72 -0.15,0.93 -4.44,3.22 -2.14,0.11 -0.6,0.91 0,0 -2.84,2.4 -2.06,-3.68 -4.2,3.91 -0.65,-1.63 1.2,-1.27 -0.21,-1.3 -2.11,0.21 -0.43,0.23 1.27,1.9 -2.33,2.05 0.37,1.41 -1.51,-0.82 -0.16,-1.23 -0.93,0.25 -1.52,-1.36 -1.51,2.16 -3.94,0.17 -0.96,0.76 -0.45,2.01 -6.55,-0.57 -1.57,-1.07 -3.02,-0.33 -0.75,-0.65 -1.62,0.46 0,0 -1.47,-1.37 0.76,-1.97 -0.99,-3.37 1.35,-1.86 -0.53,-0.59 0.72,-1.2 -0.73,-2.63 0.82,-2.34 -1.58,-1.47 1.18,-1.09 -0.49,-0.39 0.18,-1.4 1.34,-0.25 0.18,-0.63 -2.63,-4.58 -0.08,-2.2 -4.08,-0.18 -0.25,-1.36 1.04,-0.61 0.88,-2.26 0.72,0.25 4.27,-1.78 1.81,0.07 -0.01,0.78 0.93,0.12 0.2,-1.99 0.86,-0.72 1.65,0.85 0.37,-1.13 -1.29,-1.77 1.2,-1.63 -0.6,-0.6 -0.75,0.43 -0.34,-1.24 z m 35.66,13.49 -2.02,-2.16 1.55,0.24 0.47,1.92 z\"\n  }, {\n    \"id\": \"es-sg\",\n    \"name\": \"Segovia\",\n    \"d\": \"m 163.75737,92.257342 2.64,1.28 2.17,2.9 1.11,-0.19 -0.49,-1.67 1.1,-0.5 -0.06,3.22 0.93,0.38 0.34,-2.73 1.74,-1.75 3.99,-0.7 0,0 0.1,1.05 1.12,0.93 0.68,0.34 0.66,-0.66 1.04,0.83 0.34,1.65 2.54,0.63 -0.62,2.69 4.4,3.689998 0,0 -1.46,1.89 -0.5,-0.71 -2,0.9 -2.25,-0.31 0.22,1.91 -1.28,-0.07 -0.7,1.31 -2.23,0.74 0,0 -2.27,0.64 -1.94,2.55 -1.91,1.32 -1.31,2.17 -3.48,1.35 -1.31,1.61 -1.28,5.78 -2.77,-0.39 -2.77,4.19 0,0 -0.72,-0.33 -2.81,0.88 0,0 -1.29,0.38 -0.08,0.78 0,0 -3.06,0.56 -0.35,-4.39 -1.32,-1.3 -0.61,-2.38 -1.61,0.33 -0.39,-0.57 0.84,-0.77 -0.85,-1.1 -0.21,-2.85 -1.24,-0.59 -0.97,-2.45 -2.3,-1.28 -0.27,-3.51 0,0 1.27,-1.48 1.62,0.61 -0.71,-2.05 2.37,-2.19 -0.71,-1.85 1.15,0.75 0.94,-0.77 1.87,1.03 -1.12,-2.09 0.62,-0.8 -0.94,-1.739998 1.43,-0.15 1.51,-1.09 1.66,0.16 0.07,-0.57 2.84,-0.46 0.27,0.44 6.01,-1.81 2.01,-0.87 z\"\n  }, {\n    \"id\": \"es-so\",\n    \"name\": \"Soria\",\n    \"d\": \"m 196.49737,74.237342 0.92,0.55 2.18,-1.12 0.65,-2.97 1.63,-0.66 0.99,0.92 -1.58,2.88 0.35,0.98 5.1,0.51 0.95,-2.27 1.05,-0.72 0,-1.88 0.93,0.34 1.41,-1.27 3.26,-0.36 1.54,0.59 0.38,1.77 1.87,-0.66 2.5,0.31 0.01,0.67 -1.07,0.58 1.66,2.64 -0.5,0.3 0.43,1.54 2.26,0.76 0.25,-0.56 1.42,1.39 2.05,-0.53 1.8,-1.41 0,0 -0.02,2.34 1.21,2.3 -1.08,2.62 1.54,1.57 -0.2,0.6 1.04,0.49 -0.35,1.04 -0.78,0.53 0.18,0.91 -1.62,0.11 -1.96,2.58 -2.16,-0.07 0.8,2.21 -0.42,2.43 0.85,0.98 0.47,2.25 -2.8,0.939998 -0.2,-1.739998 -2.02,-0.77 -0.44,2.599998 -1.45,1.09 -0.32,2.73 0.84,4.22 2.03,0.54 0.87,0.98 0,0 -0.15,3.13 -2.31,-1.96 -1.33,1.39 -1.75,-0.53 -0.96,1.19 -1.84,0.45 -0.98,-1.22 -1.95,1.17 -1.55,-0.83 -0.33,-1.44 -0.88,-0.21 -0.85,-1.77 -1.2,0.93 -0.62,-0.49 0.55,-1.12 -1.35,-0.36 0.88,-0.52 0.12,-0.96 -1.22,0.38 -0.52,-1.02 -1.95,-0.48 -0.22,-0.96 -1.35,0.07 -0.45,0.97 -1.43,-0.27 -1.37,-0.72 -0.07,-1.73 -1.16,-0.44 -1.33,1.43 -3.43,0.78 -4.46,-1.25 0,0 -4.4,-3.689998 0.62,-2.69 -2.54,-0.63 -0.34,-1.65 -1.04,-0.83 -0.66,0.66 -0.68,-0.34 -1.12,-0.93 -0.1,-1.05 0,0 -0.27,-0.78 0.65,-0.65 2.15,0.94 2.02,-4.13 1.07,-0.12 0.17,-1.82 2.38,-1.26 -0.26,-4.72 2.74,2.25 0.71,1.47 1.08,-0.78 1.2,-2.83 2.47,-0.24 0.26,-1.45 1.15,-0.29 0.62,-2.66 z\"\n  }, {\n    \"id\": \"es-ss\",\n    \"name\": \"Guipúzcoa\",\n    \"d\": \"m 230.90737,17.207342 -0.18,1.96 1.91,0.72 0.21,1.41 0,0 -1.66,0.39 -0.36,1.68 -2.01,1.45 -0.22,-0.76 -0.44,0.99 -1.05,-0.68 -0.13,3.06 0.56,0.61 -3.7,2.94 -0.48,3.52 -1.75,0.36 -1.05,1.38 -1.58,0.18 -0.9,-0.62 -1.24,2.27 0,0 -1.19,-0.28 -0.39,-0.99 -1.61,-1 -5.54,-0.98 -0.22,0.97 -1.18,-0.59 -0.67,-0.75 0.19,-1.13 1.44,-0.44 0.76,-1.03 -0.67,-1.83 0,0 1.4,-0.35 -0.27,-2.72 0.77,-0.42 -0.4,-2.05 1.88,-0.98 0.56,-1.02 -0.57,-1.33 0.75,-0.91 0,0 1.81,1.01 2.12,0.1 1.71,-0.69 1.56,1 1.55,-0.13 6.13,-1.88 z\"\n  }, {\n    \"id\": \"es-te\",\n    \"name\": \"Teruel\",\n    \"d\": \"m 236.27737,118.27734 1.82,0.17 1.62,-1 0.99,0.62 0.8,-1.12 -0.91,-1.56 2.01,-0.81 0.18,-1.27 1.51,-0.9 0.05,1.26 2.05,0.35 1.05,-1.16 -0.56,-1.05 0.52,-0.78 1.37,-0.66 1.1,0.61 1.61,-0.45 0.52,-1.33 2.01,1.34 1.18,0.02 0.87,-0.78 -0.8,2.36 1.26,0.76 1.38,-0.67 0.89,-2.26 0.72,1.65 0.96,0.47 1.23,-0.47 0.83,-2.5 2.07,2.33 2.58,-3.23 -1.82,-1.83 1.35,-0.46 -0.14,-2.59 0.75,-0.47 2.27,3.88 0.67,-0.42 -0.54,-2.03 -1.68,-1.35 0.44,-1.33 2.69,0.33 0.3,1.13 1.52,0.26 -0.25,0.72 0.7,0.88 2.11,1.26 0.59,-0.66 2.85,2.75 1.37,0.09 4.75,2.42 1.92,3.31 1.09,-1.33 2.25,0.66 2.29,-0.34 0,0 1.83,2.1 -0.65,0.23 1.06,1.76 -1.67,3.46 1.21,2.59 -1.49,2.16 -1.68,0.51 0.01,0.55 -0.5,-0.38 0.36,0.72 0,0 -3.01,0.74 -0.94,0.94 -0.81,-1.51 -2.47,0.05 -3.07,-2.47 -0.99,0.16 -0.83,1.23 -0.36,2.54 -2.18,1.27 -0.67,-0.83 -1.51,0.52 0.23,2.16 2.37,0.11 -0.27,3.82 0.9,1.7 -2.29,1.2 1.99,3.16 -1.78,1.01 -0.79,1.4 -0.73,-0.03 0.2,1.64 -1.37,0.84 -2.04,0.61 -1.52,-0.92 -1.05,4.54 -1.54,1.44 0.46,1.28 -2.13,1.03 -2.17,-0.09 -0.74,1.93 -1.84,0.86 -0.08,2.06 1.31,1.75 0,0 -2.02,1.34 -0.77,-0.19 -0.73,-0.8 0.3,-2.38 -0.55,-1.29 -0.35,0.33 -1.82,-1.03 -3.49,0.27 -0.51,0.57 -0.64,-0.44 0,0 -0.7,-1.53 0,0 2.49,-1.04 0.37,-0.97 -2.31,-2.13 -2.99,-0.09 0.02,-1.19 -1.23,-1.02 -0.43,-1.61 -0.76,1.07 0.2,1.41 -1.25,0.83 -2.81,-0.66 0,0 0.3,-2.06 -1.09,0.47 -1.12,-0.74 -0.9,0.51 -4.6,-4.76 -0.89,1.31 -0.3,-1.05 0.96,-0.72 -3.33,-3.09 0,0 1.77,-2.6 1.72,-0.96 -0.29,-2.06 0.73,-2.13 2.44,1.17 1.63,-1.34 -0.59,-0.78 0.9,-2.92 -0.81,-2.12 0.68,-0.85 -0.08,-2.04 -2.39,-2.75 z\"\n  }, {\n    \"id\": \"es-tf\",\n    \"name\": \"Santa Cruz de Tenerife\",\n    \"d\": \"m 195.64737,435.62734 0.81,0.25 0.58,1.36 -1.45,2.56 -0.81,0.27 -0.68,2.84 -2.23,-1.87 -3.35,-0.75 0.79,-1.98 1.63,0.62 1.39,-0.32 1.43,-1.27 -0.23,-0.87 2.12,-0.84 z m 20.51,-12.73 0.45,0.6 1.49,0.03 2.88,2.47 0.12,1.15 -3.06,2.47 -2.21,-0.03 -2.42,-2.53 0.84,-3.56 1.91,-0.6 z m 33.79,-12.88 1,0.6 0.03,1.37 -3.39,1.62 -0.57,1.21 -3.25,2.47 -0.06,2.58 -1.92,3.52 -0.1,1.99 -3.63,4.2 -4.78,0.72 -1.08,-2.84 -3.09,-4.2 -0.09,-1.99 -2.53,-3.14 2.75,-1.31 2.51,0.78 2.33,-1.06 2.19,0.25 2.78,-0.87 1.74,-1.39 1.4,-2.37 2.34,-1.03 0.16,-0.69 3.3,0.39 1.96,-0.81 z m -54.06,-9.38 1.94,0.87 2.45,-0.19 1.64,3.33 -1.36,2.3 0.57,1.85 -0.31,1.92 -2.45,4.04 -0.87,-0.68 -0.37,-2.35 -1.44,-1.95 -1.69,-4.63 -0.85,-0.69 0.08,-1.18 2.66,-2.64 z\"\n  }, {\n    \"id\": \"es-to\",\n    \"name\": \"Toledo\",\n    \"d\": \"m 145.39737,147.50734 1.32,0.71 3.02,-1.52 0.06,-0.87 1.58,-1.19 0.09,-1.17 0.74,0.34 0.27,2.93 0.82,0.46 1.54,-0.32 0.78,-1.63 1.29,0.19 0.38,-1.12 1.45,1.31 0.02,0.77 1.21,0.13 1.01,-0.92 1.46,0.63 0.96,1.58 1.21,-0.11 0.11,0.93 0.56,-0.59 1.68,0.51 1.27,1.19 0.89,-0.64 1.87,1.79 0.75,-0.61 0.91,0.61 0.74,-0.44 1.85,1.39 -0.43,2.11 -3.86,3 0.62,0.57 -1.08,-0.17 0.18,0.83 -0.45,0.04 0.16,-0.69 -0.68,0.79 -1.16,-0.01 -0.21,0.66 -0.23,-0.48 -1.13,0.54 0.2,0.96 2.01,0.8 1.81,-2.23 3.38,-1.02 -0.1,-0.9 1.49,-0.99 2.14,-0.3 0.39,-1.09 3.47,0.51 0.52,-1.59 1.31,-0.25 1.77,1.36 2.2,-0.46 0.92,-1.27 0.42,1.03 0,0 0.58,3.2 1.41,-0.08 -0.02,2.13 -0.92,2.34 1.56,0.76 2.41,5.44 2.75,3.04 -0.71,6.77 0,0 -0.78,0.96 -1.31,0.22 -0.71,-0.6 -1.44,0.26 -2.27,-1.79 -1.26,0.3 -0.02,0.55 -3.35,0.13 -0.66,1.47 0.21,1.37 -3.11,-0.22 -1.85,1.28 -0.19,1.15 -1.71,1.54 -4.53,0.23 -1.3,1.14 -2.16,-0.9 -1.98,1.33 -3.31,-1.56 -0.21,-2.14 -3.11,-0.52 -0.95,0.96 -0.49,-0.85 -0.85,-0.01 0.92,-3.72 1.54,0 0.25,-2.57 0.91,-0.01 -0.36,-2.11 -2.54,0.46 -1.05,-0.52 -1.05,3.23 -1.5,0.69 -4.15,-0.72 -2.04,-1.07 -0.55,1.76 -1.52,-1.72 0.89,-0.66 -1.33,-0.9 -0.17,1.18 -0.36,-0.49 -0.56,0.41 -0.21,1.44 -1.55,0.5 0.01,1.2 -2.14,0.16 0,0 0,0 0,0 -2.07,1.37 0,0 0.12,-3.39 -3.43,-2.17 -1.38,2.47 -1,3.91 0,0 -0.36,0 0,0 -7.8,-8.01 1.38,-1.82 0.73,-2.85 -1.1,-1.43 0.47,-0.35 -0.26,-1.6 -1.2,0.09 -1.48,1.79 -1.68,-0.31 -0.11,-2.54 0.87,-1.58 -1.3,-1.12 -2.44,0.57 1.26,-4.23 -0.12,-4.64 1.01,-0.63 0,0 3.78,0.36 0.33,0.96 0.93,-0.08 3.12,-2.56 1.58,-0.41 0.16,1.92 1.8,-0.4 -0.05,-0.49 0.95,-0.11 0.02,-1.35 3.59,-2.62 0.11,-1.59 1.32,0.57 1.93,-0.86 0.35,2.86 1.01,0.51 z\"\n  }, {\n    \"id\": \"es-t\",\n    \"name\": \"Tarragona\",\n    \"d\": \"m 328.64737,92.597342 1.89,0.24 -0.72,0.55 0.54,0.76 -1.22,0.09 -0.38,0.9 2.71,1.55 -0.49,1.26 0.82,0.34 -0.62,0.25 0.46,1.14 -0.52,0.849998 1.11,-0.559998 0.85,0.369998 1.26,0.93 -0.59,0.79 1.11,1.38 -0.21,0.63 1.49,-0.08 -0.52,1.72 -1.52,-0.29 0.35,0.96 1.22,0.57 0.6,-0.49 0.13,1.61 0,0 -5.51,1.21 -1.96,1.38 -3.1,0.12 -2.65,1.04 -1.29,1.98 -1.51,-0.82 -4.29,1.45 -8.71,9.59 1.04,1.37 1.14,0.17 0.37,-0.34 -1.73,-0.72 1.4,-0.06 1.8,2.34 1.35,0.07 -0.15,1.45 -3.46,2.26 -2.65,3.2 -1.59,0.26 -0.69,-0.91 3.37,-0.82 1.18,-1.58 -4.4,0.57 -2.63,3.99 0,0 -2.37,-0.97 0.18,-1.25 -1.29,-0.97 0,0 -3.78,-1.11 0,0 -0.32,-1.19 0.72,-1.17 -1.71,-0.55 -0.3,-1.25 -1.7,0.01 0,0 -0.35,-0.72 0.5,0.38 0,-0.56 1.68,-0.5 1.48,-2.16 -1.2,-2.58 1.67,-3.46 -1.06,-1.76 0.64,-0.24 -1.83,-2.09 0,0 -0.59,-0.54 0,-1.71 1.43,-0.14 0.16,-0.81 1.54,-0.58 0.59,-2.47 1.81,-0.45 0.13,-1.72 0,0 1.46,0.11 0.05,-1.81 0.81,-0.58 1.29,1.84 0.67,-0.02 0.9,-1.48 1.3,1.35 0.96,0.1 3.79,-1.09 0.3,-0.65 1.79,0.2 0.78,-1.35 0.57,0.97 3.1,-0.71 0.53,-1.49 1.39,-0.719998 1.48,-2.04 -1.16,-0.82 0.07,-0.86 2.22,1.39 2.11,-0.86 -0.5,-1.89 1.42,-0.58 0.28,-0.86 5.63,0.47 -0.35,-0.73 z\"\n  }, {\n    \"id\": \"es-v\",\n    \"name\": \"Valencia\",\n    \"d\": \"m 250.84737,157.31734 0.63,0.44 0.51,-0.56 3.49,-0.27 1.82,1.03 0.35,-0.33 0.55,1.3 -0.3,2.37 0.74,0.81 0.77,0.19 2.02,-1.34 0,0 2.06,2.63 1.21,-1.49 1.07,0.66 0.12,3.26 0.66,0.31 1.31,0.19 0.34,-1.25 1.43,-0.91 2.28,3.23 1.89,-1.81 0.52,-1.58 1.52,-0.06 2.06,2.28 2.22,0.87 0,0 -0.78,2.99 -1.1,0.84 -2.04,4.05 -0.55,3.96 1.28,4.62 2.35,4.72 -0.74,0.49 0.1,1.83 1.52,3.61 4.6,5.92 0,0 0.11,1.12 -1.12,-1.12 -2.38,1.07 -0.39,-1.14 -2.14,1.33 -2.46,-1.1 -2.19,1.84 -0.61,-0.21 -2.22,1.41 -3.24,0.12 -0.49,0.41 0.37,0.86 0.75,0.57 0.87,-0.52 0.75,0.95 -3.4,2.21 -0.78,-1.61 -1.96,-0.24 -0.85,-1 -3.06,1.06 -0.83,-1.51 -1.3,0.15 -0.76,-0.66 0,0 0.14,-4.23 -1.07,-2.08 -5.75,0.6 -3.69,-4.78 0.34,-2.17 2.3,-4.16 0.49,-3.9 -4.52,-1.29 -0.73,0.36 -2.39,-1.83 -1.26,0.76 0.07,-1.49 -0.63,0.3 -0.33,-1.25 -0.65,0.19 0,0 0.27,-0.43 -0.75,-0.11 0.51,-5.24 1.3,-0.5 1.35,-3.11 1.52,-1.38 1.71,0.76 1.02,-0.29 0.54,-0.83 -0.41,-1.51 1.85,-2.85 0.46,-2.02 -0.25,-3.36 1.98,-1.15 z m -9.4,-6.93 2.82,0.66 1.24,-0.83 -0.2,-1.41 0.76,-1.07 0.43,1.61 1.23,1.02 -0.02,1.19 3,0.09 2.31,2.13 -0.37,0.97 -2.48,1.04 0,0 -2.54,0.6 -3.95,-0.85 -1.33,-3.08 0.39,-0.31 -1.49,-1.18 0.2,-0.58 z\"\n  }, {\n    \"id\": \"es-va\",\n    \"name\": \"Valladolid\",\n    \"d\": \"m 116.49737,71.177342 1.23,1.84 1.82,0.9 0,0 -0.79,0.7 0.5,0.46 -0.22,1.44 -1.43,-0.71 0.37,-1.19 -1.48,-3.44 z m 5.33,-6.69 0.57,-0.62 0.82,0.2 -0.05,0.71 0,0 -1.04,0.87 -0.3,-1.16 z m -0.9,8.98 -0.36,-7.42 0.82,-0.15 1.65,1.07 0.63,-1.27 0.65,0.79 0.74,-0.15 0.42,-0.63 -0.8,-0.41 0.54,-1.39 1.65,0.38 2.17,-1.97 1.76,2.25 0.51,-1.64 1.11,0.33 0,0 -0.76,5.58 3.05,0.15 0.72,2.96 -1.4,1.13 0.42,1.36 -0.91,0.45 -1.21,2.46 0.66,1.53 1.05,-0.98 0.66,0.77 1.81,-0.69 2.45,4.67 3.67,-3.38 3.18,3.61 0.52,-0.76 1.14,0.32 1.19,-0.81 0.37,0.93 -0.8,0.01 -0.42,2 1.44,0.5 1.92,-1.15 2.27,0.98 2.51,-2.07 0.64,0.59 2.82,-0.32 0.73,1.35 1.8,0.25 0,0 -1.09,1.73 1.54,1.38 -0.28,2.94 0.9,0.05 0.78,1.47 0,0 -0.59,2.75 -2.01,0.87 -6.01,1.8 -0.28,-0.44 -2.83,0.46 -0.08,0.57 -1.66,-0.16 -1.51,1.09 -1.43,0.14 0.94,1.749998 -0.63,0.8 1.13,2.09 -1.87,-1.03 -0.95,0.77 -1.14,-0.75 0.71,1.85 -2.36,2.19 0.71,2.06 -1.62,-0.61 -1.27,1.48 0,0 -1.97,0.23 -0.84,0.58 -0.04,1.05 -1.49,0.38 -3.87,-2.71 -4.15,1.17 0,0 -1.68,-1.43 -1.18,0.31 -0.74,-1.52 -1.41,0.06 -0.01,0.55 0,0 -1.31,0.14 -0.27,-0.63 1.43,-1.31 0.06,-1.75 -1.32,-4.13 0.83,-1.769998 -0.97,-0.47 0.44,-1.21 -0.61,-0.98 3.56,-2.01 -1.97,-1.88 0.69,-1.09 -1.79,-0.6 0.02,-2.69 -0.92,-0.73 -0.11,-1.19 -0.41,0.37 -0.5,-1.67 3.43,-2.17 -0.23,-0.58 -1.3,-0.14 1.1,-3.65 -1.27,-0.72 2.47,-1.82 -0.8,0.12 -2.98,-2.59 z\"\n  }, {\n    \"id\": \"es-vi\",\n    \"name\": \"Alava\",\n    \"d\": \"m 189.50737,26.947342 0.92,0.76 1.12,-0.12 1.47,-0.63 0.32,-1.74 0.3,0.26 0.82,-0.22 1.36,2.75 -1.14,1.71 2.42,2.05 0.93,-0.23 2.89,1.05 4.18,0.29 -0.86,-2.27 3.53,-0.58 0,0 0.67,1.83 -0.76,1.03 -1.44,0.44 -0.19,1.13 0.67,0.75 1.18,0.59 0.22,-0.97 5.54,0.98 1.61,1 0.39,0.99 1.19,0.28 0,0 0.56,2.17 -1.48,2.45 0.57,1.54 -1.67,0.37 -0.21,0.64 1.08,2.87 -2.87,0.86 0.18,-0.68 -1.21,-0.5 -2.06,2.1 -0.52,-0.18 0.29,1.29 0.87,-0.08 0.27,0.84 0.99,-1.66 0.75,0.33 0.14,3.41 -0.92,0.22 0.04,0.93 0,0 -2.89,-0.03 0.15,-1.24 -0.62,1.5 -1.16,-0.42 -0.9,0.88 -0.26,-1.27 -1.3,0.84 -0.86,-1.76 -0.91,0.37 0.77,-3.23 -2.55,-1.18 -0.43,1.7 -1.45,1.12 -0.48,-1.11 0.64,-1.37 -0.67,0.25 -0.5,-1.23 0,0 -1.16,-0.7 -0.2,-1.6 -0.86,-0.61 -1.54,0.18 -1.09,-1.53 -0.75,0.08 -0.27,-1.13 -3.01,0.37 0.76,-1.36 -1.1,-0.64 1.41,-2.35 -0.05,-1.18 -1.4,1.37 -0.92,-0.55 -0.97,1.29 0.51,0.47 -2.37,-2.01 1.78,-3.1 2.46,0.63 -0.15,0.73 1.84,0.77 2.17,-0.4 1.15,-1.26 -1.81,-1.28 -0.6,-1.42 -3.61,-0.77 1.1,-0.33 0.05,-1.56 -0.55,-0.29 0.74,-0.97 -1.47,-0.99 1.19,-1.73 z m 9.65,15.76 2.92,-0.42 2.7,1.24 1.27,-0.25 0.4,0.85 0.95,-0.52 -1.55,2.78 0.96,1.15 1.71,-0.66 0.14,1.57 -3.6,-0.06 -0.75,-1.02 -3.34,0.27 -0.51,-1.37 -2.58,-1.7 1.01,-2.35 0,0 0.27,0.49 z\"\n  }, {\n    \"id\": \"es-z\",\n    \"name\": \"Zaragoza\",\n    \"d\": \"m 258.25737,44.437342 -0.66,1.75 1.3,0.52 -0.4,1.08 -1.06,0.25 0.7,2.3 -0.9,1.17 0.48,0.72 0.59,-0.19 0.08,0.83 -1.13,1.41 1.25,-0.16 0.46,2 -0.85,1.04 2.77,1.72 -0.89,0.44 -2.26,5.33 0.88,0.61 0.38,-1.69 1.96,0.71 1.25,-3.35 -0.17,-1.9 1.27,0.89 0.23,2.98 -0.93,1.41 0.36,4.45 -0.47,3.62 -0.98,0.53 -0.31,-1.7 -2.46,3.82 3.28,1.9 3.69,0 0.85,1.85 1.08,0.55 -0.26,0.67 1.48,0.47 1.18,1.42 0.49,3.09 -0.57,1.31 0.92,-0.1 3.53,1.79 0.37,2.06 1.53,0.56 2.04,2.06 1.23,-1.17 1.52,0.5 -0.01,2.24 1.59,2.03 0.99,4.419998 0.71,0.68 1.27,0.51 -0.49,-1.999998 1.04,1.489998 2.56,0.42 2.19,-2.309998 0.5,0.5 1.17,-0.37 0.8,-1.02 2.76,0.83 0,0 -0.46,0.55 1.65,1.809998 -0.78,0.84 1.14,2.07 0,0 -0.13,1.72 -1.81,0.46 -0.58,2.47 -1.55,0.58 -0.16,0.81 -1.43,0.14 0,1.71 0.59,0.53 0,0 -2.29,0.34 -2.25,-0.66 -1.09,1.33 -1.92,-3.31 -4.75,-2.42 -1.37,-0.09 -2.85,-2.75 -0.59,0.66 -2.11,-1.26 -0.7,-0.88 0.25,-0.72 -1.52,-0.26 -0.3,-1.13 -2.69,-0.33 -0.44,1.33 1.68,1.35 0.54,2.03 -0.67,0.42 -2.27,-3.88 -0.75,0.47 0.14,2.59 -1.35,0.46 1.82,1.83 -2.58,3.23 -2.07,-2.33 -0.83,2.5 -1.23,0.47 -0.96,-0.47 -0.72,-1.65 -0.89,2.26 -1.38,0.67 -1.26,-0.76 0.8,-2.36 -0.87,0.78 -1.18,-0.02 -2.01,-1.34 -0.52,1.33 -1.61,0.45 -1.1,-0.61 -1.37,0.66 -0.52,0.78 0.56,1.05 -1.05,1.16 -2.05,-0.35 -0.05,-1.26 -1.51,0.9 -0.18,1.27 -2.01,0.81 0.91,1.56 -0.8,1.12 -0.99,-0.62 -1.62,1 -1.82,-0.17 0,0 -5.68,-5.9 -3.99,-2 -0.82,-1.38 -2.84,1.04 0,0 -0.87,-0.98 -2.03,-0.54 -0.84,-4.22 0.32,-2.73 1.45,-1.09 0.44,-2.599998 2.02,0.77 0.2,1.739998 2.8,-0.939998 -0.47,-2.25 -0.85,-0.98 0.42,-2.43 -0.8,-2.21 2.16,0.07 1.96,-2.58 1.62,-0.11 -0.18,-0.91 0.78,-0.53 0.35,-1.04 -1.04,-0.49 0.2,-0.6 -1.54,-1.57 1.08,-2.62 -1.21,-2.3 0.02,-2.34 0,0 0.29,-1.71 0,0 0.41,0.53 2.05,-0.03 1.59,1.6 1.87,-0.35 2.94,2.12 4.53,-0.21 3.25,-5.1 -0.18,-1.21 -1.28,-0.03 -1.43,-2.19 0.22,-2.2 -0.79,-1.33 0.57,-3.28 2.14,-2.65 -0.94,-0.95 0.56,-1.89 2.11,-2.42 -0.47,-1.68 0.72,-1.41 1.18,0.61 0.72,-0.31 0.03,-1.19 1.34,-0.88 -0.67,-0.35 0.68,-0.11 0.16,-1.54 3.05,0.22 0.77,-2.4 1.81,-0.15 1.41,-1.68 z\"\n  }, {\n    \"id\": \"es-za\",\n    \"name\": \"Zamora\",\n    \"d\": \"m 77.72737,64.727342 2.47,1.82 2,-0.32 0.78,0.58 2.67,-0.01 0.88,0.88 2.13,-0.82 3.54,-0.19 0.58,1.18 2.5,1.23 1.6,-0.73 4.03,0.34 2.31,1.4 0.17,-0.75 1.12,0.05 0.43,-0.64 1.62,1.87 2.29,-1.04 0.82,0.93 2.04,-0.28 -0.31,-0.74 0.6,-0.16 1.47,1.53 -0.45,0.97 1.4,0.17 0.06,1.09 1.04,-0.53 0.29,-1.47 0.69,0.09 0,0 1.47,3.44 -0.37,1.2 1.43,0.7 0.22,-1.44 -0.5,-0.46 0.79,-0.7 0,0 1.39,-0.45 0,0 2.94,2.58 0.79,-0.11 -2.47,1.81 1.28,0.72 -1.1,3.65 1.3,0.14 0.23,0.58 -3.43,2.17 0.5,1.67 0.41,-0.37 0.11,1.2 0.92,0.73 -0.02,2.69 1.79,0.61 -0.69,1.09 1.97,1.88 -3.56,2.01 0.61,0.97 -0.44,1.21 0.97,0.47 -0.83,1.769998 1.32,4.13 -0.06,1.75 -1.43,1.31 0.27,0.63 1.31,-0.14 0,0 -0.28,2.28 -0.95,0.35 -0.86,-0.96 -1.33,-0.19 -0.23,-1.63 -2.12,0.3 -0.23,1.33 -0.03,-1.36 -2.45,-1.55 -0.7,0.6 -1.24,-0.49 -0.88,-1.27 -3.32,1.21 -4.07,-0.92 -0.72,0.83 0.25,1.62 -1.23,1.55 -0.8,-1.4 -1.31,0.78 0.4,-1.83 -1.63,-0.84 -2.22,1.25 -5.62,-3.28 -4.98,-0.94 0,0 1.29,-0.46 0.69,-1.73 1.09,-0.34 -0.27,-1.19 2.19,-0.04 -0.5,-0.969998 1.18,-1.02 -0.32,-0.59 3.57,-5.11 -0.24,-0.6 -2.64,-2.57 -1.84,-0.86 -3.13,-0.46 -1.64,1.13 -1.53,-1.17 -0.64,-2.37 1.64,-5.25 -1.71,-0.49 0.76,-2.3 -1.17,-1.1 -1.13,1.09 -2.41,0.26 -1.55,-0.42 -0.56,-1.66 -1.31,-0.35 -0.58,2.01 -3.41,-0.01 -0.5,-1.03 -0.79,-0.17 0,0 0.69,-2.23 -0.42,-1.15 -1.16,0.1 -0.64,-0.89 0.93,-0.39 0.41,-1.54 1.03,-0.34 0.39,-1.77 1.3,-0.71 0.44,-1.02 1.33,-0.58 1.73,0.52 -0.49,-0.95 z\"\n  }]\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (spainProvinces);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/spain-provinces.js\n");

/***/ }),

/***/ "./node_modules/@south-paw/react-vector-maps/dist/react-vector-maps.esm.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@south-paw/react-vector-maps/dist/react-vector-maps.esm.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VectorMap\": function() { return /* binding */ VectorMap; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar VectorMap = function VectorMap(_ref) {\n  var id = _ref.id,\n      name = _ref.name,\n      layers = _ref.layers,\n      _ref$tabIndex = _ref.tabIndex,\n      tabIndex = _ref$tabIndex === void 0 ? 0 : _ref$tabIndex,\n      layerProps = _ref.layerProps,\n      checkedLayers = _ref.checkedLayers,\n      currentLayers = _ref.currentLayers,\n      children = _ref.children,\n      other = _objectWithoutPropertiesLoose(_ref, [\"id\", \"name\", \"layers\", \"tabIndex\", \"layerProps\", \"checkedLayers\", \"currentLayers\", \"children\"]);\n\n  if (!layers || layers.length === 0) {\n    // eslint-disable-next-line no-console\n    console.error(\"[react-vector-maps] No 'layers' prop provided. Did you spread a map object onto the component?\");\n    return null;\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    key: id,\n    \"aria-label\": name\n  }, other), children, layers.map(function (layer) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"path\", Object.assign({\n      key: layer.id,\n      tabIndex: tabIndex,\n      \"aria-label\": layer.name,\n      \"aria-checked\": checkedLayers && checkedLayers.includes(layer.id),\n      \"aria-current\": currentLayers && currentLayers.includes(layer.id)\n    }, layer, layerProps));\n  }));\n};\n\n\n//# sourceMappingURL=react-vector-maps.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzb3V0aC1wYXcvcmVhY3QtdmVjdG9yLW1hcHMvZGlzdC9yZWFjdC12ZWN0b3ItbWFwcy5lc20uanM/YTE2NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMEI7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYSx1QkFBdUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBUywwREFBbUI7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILFdBQVcsMERBQW1CO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVxQjtBQUNyQiIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9Ac291dGgtcGF3L3JlYWN0LXZlY3Rvci1tYXBzL2Rpc3QvcmVhY3QtdmVjdG9yLW1hcHMuZXNtLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IHt9O1xuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gIHZhciBrZXksIGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbnZhciBWZWN0b3JNYXAgPSBmdW5jdGlvbiBWZWN0b3JNYXAoX3JlZikge1xuICB2YXIgaWQgPSBfcmVmLmlkLFxuICAgICAgbmFtZSA9IF9yZWYubmFtZSxcbiAgICAgIGxheWVycyA9IF9yZWYubGF5ZXJzLFxuICAgICAgX3JlZiR0YWJJbmRleCA9IF9yZWYudGFiSW5kZXgsXG4gICAgICB0YWJJbmRleCA9IF9yZWYkdGFiSW5kZXggPT09IHZvaWQgMCA/IDAgOiBfcmVmJHRhYkluZGV4LFxuICAgICAgbGF5ZXJQcm9wcyA9IF9yZWYubGF5ZXJQcm9wcyxcbiAgICAgIGNoZWNrZWRMYXllcnMgPSBfcmVmLmNoZWNrZWRMYXllcnMsXG4gICAgICBjdXJyZW50TGF5ZXJzID0gX3JlZi5jdXJyZW50TGF5ZXJzLFxuICAgICAgY2hpbGRyZW4gPSBfcmVmLmNoaWxkcmVuLFxuICAgICAgb3RoZXIgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBbXCJpZFwiLCBcIm5hbWVcIiwgXCJsYXllcnNcIiwgXCJ0YWJJbmRleFwiLCBcImxheWVyUHJvcHNcIiwgXCJjaGVja2VkTGF5ZXJzXCIsIFwiY3VycmVudExheWVyc1wiLCBcImNoaWxkcmVuXCJdKTtcblxuICBpZiAoIWxheWVycyB8fCBsYXllcnMubGVuZ3RoID09PSAwKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICBjb25zb2xlLmVycm9yKFwiW3JlYWN0LXZlY3Rvci1tYXBzXSBObyAnbGF5ZXJzJyBwcm9wIHByb3ZpZGVkLiBEaWQgeW91IHNwcmVhZCBhIG1hcCBvYmplY3Qgb250byB0aGUgY29tcG9uZW50P1wiKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3ZnXCIsIE9iamVjdC5hc3NpZ24oe1xuICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gICAga2V5OiBpZCxcbiAgICBcImFyaWEtbGFiZWxcIjogbmFtZVxuICB9LCBvdGhlciksIGNoaWxkcmVuLCBsYXllcnMubWFwKGZ1bmN0aW9uIChsYXllcikge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCBPYmplY3QuYXNzaWduKHtcbiAgICAgIGtleTogbGF5ZXIuaWQsXG4gICAgICB0YWJJbmRleDogdGFiSW5kZXgsXG4gICAgICBcImFyaWEtbGFiZWxcIjogbGF5ZXIubmFtZSxcbiAgICAgIFwiYXJpYS1jaGVja2VkXCI6IGNoZWNrZWRMYXllcnMgJiYgY2hlY2tlZExheWVycy5pbmNsdWRlcyhsYXllci5pZCksXG4gICAgICBcImFyaWEtY3VycmVudFwiOiBjdXJyZW50TGF5ZXJzICYmIGN1cnJlbnRMYXllcnMuaW5jbHVkZXMobGF5ZXIuaWQpXG4gICAgfSwgbGF5ZXIsIGxheWVyUHJvcHMpKTtcbiAgfSkpO1xufTtcblxuZXhwb3J0IHsgVmVjdG9yTWFwIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdC12ZWN0b3ItbWFwcy5lc20uanMubWFwXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@south-paw/react-vector-maps/dist/react-vector-maps.esm.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/object-assign.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/object-assign.js ***!
  \*****************************************************************/
/***/ (function(module) {

"use strict";
eval("var assign=Object.assign.bind(Object);module.exports=assign;module.exports.default=module.exports;\n//# sourceMappingURL=object-assign.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC9wb2x5ZmlsbHMvb2JqZWN0LWFzc2lnbi5qcz80MWViIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhLHNDQUFzQyxzQkFBc0Isc0JBQXNCO0FBQy9GIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC9wb2x5ZmlsbHMvb2JqZWN0LWFzc2lnbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO3ZhciBhc3NpZ249T2JqZWN0LmFzc2lnbi5iaW5kKE9iamVjdCk7bW9kdWxlLmV4cG9ydHM9YXNzaWduO21vZHVsZS5leHBvcnRzLmRlZmF1bHQ9bW9kdWxlLmV4cG9ydHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vYmplY3QtYXNzaWduLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/object-assign.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2FUsers%2Fdiegoacuna%2FDocuments%2Fcustom-spain-map%2Fpages%2Findex.js!":
/*!*************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2FUsers%2Fdiegoacuna%2FDocuments%2Fcustom-spain-map%2Fpages%2Findex.js! ***!
  \*************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return __webpack_require__(/*! ./pages/index.js */ \"./pages/index.js\");\n      }\n    ]);\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz83NTIwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsMENBQTZEO0FBQ3BGO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/cGFnZT0lMkYmYWJzb2x1dGVQYWdlUGF0aD0lMkZVc2VycyUyRmRpZWdvYWN1bmElMkZEb2N1bWVudHMlMkZjdXN0b20tc3BhaW4tbWFwJTJGcGFnZXMlMkZpbmRleC5qcyEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAod2luZG93Ll9fTkVYVF9QID0gd2luZG93Ll9fTkVYVF9QIHx8IFtdKS5wdXNoKFtcbiAgICAgIFwiL1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gcmVxdWlyZShcIi9Vc2Vycy9kaWVnb2FjdW5hL0RvY3VtZW50cy9jdXN0b20tc3BhaW4tbWFwL3BhZ2VzL2luZGV4LmpzXCIpO1xuICAgICAgfVxuICAgIF0pO1xuICAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2FUsers%2Fdiegoacuna%2FDocuments%2Fcustom-spain-map%2Fpages%2Findex.js!\n");

/***/ }),

/***/ "./styles/Home.module.css":
/*!********************************!*\
  !*** ./styles/Home.module.css ***!
  \********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! !../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[2].use[1]!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[2].use[2]!./Home.module.css */ \"./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[2].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[2].use[2]!./styles/Home.module.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element){// These elements should always exist. If they do not,\n// this code should fail.\nvar anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>\n// Each style tag should be placed right before our\n// anchor. By inserting before and not after, we do not\n// need to track the last inserted element.\nparentNode.insertBefore(element,anchorElement);};\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a,b,isNamedExport){if(!a&&b||a&&!b){return false;}let p;for(p in a){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue\ncontinue;}if(a[p]!==b[p]){return false;}}for(p in b){if(isNamedExport&&p==='default'){// eslint-disable-next-line no-continue\ncontinue;}if(!a[p]){return false;}}return true;};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[2].use[1]!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[2].use[2]!./Home.module.css */ \"./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[2].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[2].use[2]!./styles/Home.module.css\",\n      function () {\n        content = __webpack_require__(/*! !!../node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[2].use[1]!../node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[2].use[2]!./Home.module.css */ \"./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[2].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[2].use[2]!./styles/Home.module.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3R5bGVzL0hvbWUubW9kdWxlLmNzcz9lN2QwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyxvTkFBd0c7QUFDMUgsMEJBQTBCLG1CQUFPLENBQUMsbWFBQTZNOztBQUUvTzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsbUNBQW1DO0FBQ25DO0FBQ0Esc0VBQXNFLHdDQUF3QztBQUM5RztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQSxJQUFJLElBQVU7QUFDZCx5QkFBeUIsVUFBVTtBQUNuQyxrRUFBa0UsaUJBQWlCLGNBQWMsTUFBTSxZQUFZLGlDQUFpQztBQUNwSixVQUFVLGdCQUFnQixlQUFlLFlBQVksaUNBQWlDO0FBQ3RGLFVBQVUsVUFBVSxlQUFlO0FBQ25DOztBQUVBLElBQUksaUJBQWlCO0FBQ3JCLE1BQU0sbWFBQTZNO0FBQ25OO0FBQ0Esa0JBQWtCLG1CQUFPLENBQUMsbWFBQTZNOztBQUV2Tzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsVUFBVTs7QUFFMUI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLFVBQVU7QUFDWjtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsImZpbGUiOiIuL3N0eWxlcy9Ib21lLm1vZHVsZS5jc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXN0eWxlLWxvYWRlci9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9jc3MtbG9hZGVyL2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZlsyXS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wb3N0Y3NzLWxvYWRlci9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbMl0udXNlWzJdIS4vSG9tZS5tb2R1bGUuY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gZnVuY3Rpb24oZWxlbWVudCl7Ly8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXG4vLyB0aGlzIGNvZGUgc2hvdWxkIGZhaWwuXG52YXIgYW5jaG9yRWxlbWVudD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjX19uZXh0X2Nzc19fRE9fTk9UX1VTRV9fJyk7dmFyIHBhcmVudE5vZGU9YW5jaG9yRWxlbWVudC5wYXJlbnROb2RlOy8vIE5vcm1hbGx5IDxoZWFkPlxuLy8gRWFjaCBzdHlsZSB0YWcgc2hvdWxkIGJlIHBsYWNlZCByaWdodCBiZWZvcmUgb3VyXG4vLyBhbmNob3IuIEJ5IGluc2VydGluZyBiZWZvcmUgYW5kIG5vdCBhZnRlciwgd2UgZG8gbm90XG4vLyBuZWVkIHRvIHRyYWNrIHRoZSBsYXN0IGluc2VydGVkIGVsZW1lbnQuXG5wYXJlbnROb2RlLmluc2VydEJlZm9yZShlbGVtZW50LGFuY2hvckVsZW1lbnQpO307XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIGlmICghY29udGVudC5sb2NhbHMgfHwgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKSB7XG4gICAgdmFyIGlzRXF1YWxMb2NhbHMgPSBmdW5jdGlvbiBpc0VxdWFsTG9jYWxzKGEsYixpc05hbWVkRXhwb3J0KXtpZighYSYmYnx8YSYmIWIpe3JldHVybiBmYWxzZTt9bGV0IHA7Zm9yKHAgaW4gYSl7aWYoaXNOYW1lZEV4cG9ydCYmcD09PSdkZWZhdWx0Jyl7Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG5jb250aW51ZTt9aWYoYVtwXSE9PWJbcF0pe3JldHVybiBmYWxzZTt9fWZvcihwIGluIGIpe2lmKGlzTmFtZWRFeHBvcnQmJnA9PT0nZGVmYXVsdCcpey8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuY29udGludWU7fWlmKCFhW3BdKXtyZXR1cm4gZmFsc2U7fX1yZXR1cm4gdHJ1ZTt9O1xuICAgIHZhciBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFxuICAgICAgXCIhIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvY3NzLWxvYWRlci9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbMl0udXNlWzFdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcG9zdGNzcy1sb2FkZXIvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzJdLnVzZVsyXSEuL0hvbWUubW9kdWxlLmNzc1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9jc3MtbG9hZGVyL2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZlsyXS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wb3N0Y3NzLWxvYWRlci9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbMl0udXNlWzJdIS4vSG9tZS5tb2R1bGUuY3NzXCIpO1xuXG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBjb250ZW50LmxvY2FscykpIHtcbiAgICAgICAgICAgICAgICBtb2R1bGUuaG90LmludmFsaWRhdGUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgICAgICAgICAgIHVwZGF0ZShjb250ZW50KTtcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKCk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./styles/Home.module.css\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("const isOldIE=function isOldIE(){let memo;return function memorize(){if(typeof memo==='undefined'){// Test for IE <= 9 as proposed by Browserhacks\n// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n// Tests for existence of standard globals is to allow style-loader\n// to operate correctly into non-standard environments\n// @see https://github.com/webpack-contrib/style-loader/issues/177\nmemo=Boolean(window&&document&&document.all&&!window.atob);}return memo;};}();const getTarget=function getTarget(){const memo={};return function memorize(target){if(typeof memo[target]==='undefined'){let styleTarget=document.querySelector(target);// Special case to return head of iframe instead of iframe itself\nif(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement){try{// This will throw an exception if access to iframe is blocked\n// due to cross-origin restrictions\nstyleTarget=styleTarget.contentDocument.head;}catch(e){// istanbul ignore next\nstyleTarget=null;}}memo[target]=styleTarget;}return memo[target];};}();const stylesInDom=[];function getIndexByIdentifier(identifier){let result=-1;for(let i=0;i<stylesInDom.length;i++){if(stylesInDom[i].identifier===identifier){result=i;break;}}return result;}function modulesToDom(list,options){const idCountMap={};const identifiers=[];for(let i=0;i<list.length;i++){const item=list[i];const id=options.base?item[0]+options.base:item[0];const count=idCountMap[id]||0;const identifier=id+' '+count.toString();idCountMap[id]=count+1;const index=getIndexByIdentifier(identifier);const obj={css:item[1],media:item[2],sourceMap:item[3]};if(index!==-1){stylesInDom[index].references++;stylesInDom[index].updater(obj);}else{stylesInDom.push({identifier:identifier,updater:addStyle(obj,options),references:1});}identifiers.push(identifier);}return identifiers;}function insertStyleElement(options){const style=document.createElement('style');const attributes=options.attributes||{};if(typeof attributes.nonce==='undefined'){const nonce=// eslint-disable-next-line no-undef\n true?__webpack_require__.nc:0;if(nonce){attributes.nonce=nonce;}}Object.keys(attributes).forEach(function(key){style.setAttribute(key,attributes[key]);});if(typeof options.insert==='function'){options.insert(style);}else{const target=getTarget(options.insert||'head');if(!target){throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");}target.appendChild(style);}return style;}function removeStyleElement(style){// istanbul ignore if\nif(style.parentNode===null){return false;}style.parentNode.removeChild(style);}/* istanbul ignore next  */const replaceText=function replaceText(){const textStore=[];return function replace(index,replacement){textStore[index]=replacement;return textStore.filter(Boolean).join('\\n');};}();function applyToSingletonTag(style,index,remove,obj){const css=remove?'':obj.media?'@media '+obj.media+' {'+obj.css+'}':obj.css;// For old IE\n/* istanbul ignore if  */if(style.styleSheet){style.styleSheet.cssText=replaceText(index,css);}else{const cssNode=document.createTextNode(css);const childNodes=style.childNodes;if(childNodes[index]){style.removeChild(childNodes[index]);}if(childNodes.length){style.insertBefore(cssNode,childNodes[index]);}else{style.appendChild(cssNode);}}}function applyToTag(style,options,obj){let css=obj.css;const media=obj.media;const sourceMap=obj.sourceMap;if(media){style.setAttribute('media',media);}else{style.removeAttribute('media');}if(sourceMap&&typeof btoa!=='undefined'){css+='\\n/*# sourceMappingURL=data:application/json;base64,'+btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))+' */';}// For old IE\n/* istanbul ignore if  */if(style.styleSheet){style.styleSheet.cssText=css;}else{while(style.firstChild){style.removeChild(style.firstChild);}style.appendChild(document.createTextNode(css));}}let singleton=null;let singletonCounter=0;function addStyle(obj,options){let style;let update;let remove;if(options.singleton){const styleIndex=singletonCounter++;style=singleton||(singleton=insertStyleElement(options));update=applyToSingletonTag.bind(null,style,styleIndex,false);remove=applyToSingletonTag.bind(null,style,styleIndex,true);}else{style=insertStyleElement(options);update=applyToTag.bind(null,style,options);remove=function(){removeStyleElement(style);};}update(obj);return function updateStyle(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap){return;}update(obj=newObj);}else{remove();}};}module.exports=function(list,options){options=options||{};// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nif(!options.singleton&&typeof options.singleton!=='boolean'){options.singleton=isOldIE();}list=list||[];let lastIdentifiers=modulesToDom(list,options);return function update(newList){newList=newList||[];if(Object.prototype.toString.call(newList)!=='[object Array]'){return;}for(let i=0;i<lastIdentifiers.length;i++){const identifier=lastIdentifiers[i];const index=getIndexByIdentifier(identifier);stylesInDom[index].references--;}const newLastIdentifiers=modulesToDom(newList,options);for(let i=0;i<lastIdentifiers.length;i++){const identifier=lastIdentifiers[i];const index=getIndexByIdentifier(identifier);if(stylesInDom[index].references===0){stylesInDom[index].updater();stylesInDom.splice(index,1);}}lastIdentifiers=newLastIdentifiers;};};\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/css-loader/api.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/compiled/css-loader/api.js ***!
  \***********************************************************/
/***/ (function(module) {

eval("var __dirname = \"/\";\nmodule.exports=function(){\"use strict\";var n={762:function(n){n.exports=function(n){var t=[];t.toString=function toString(){return this.map(function(t){var r=cssWithMappingToString(t,n);if(t[2]){return\"@media \".concat(t[2],\" {\").concat(r,\"}\")}return r}).join(\"\")};t.i=function(n,r,o){if(typeof n===\"string\"){n=[[null,n,\"\"]]}var e={};if(o){for(var a=0;a<this.length;a++){var c=this[a][0];if(c!=null){e[c]=true}}}for(var i=0;i<n.length;i++){var u=[].concat(n[i]);if(o&&e[u[0]]){continue}if(r){if(!u[2]){u[2]=r}else{u[2]=\"\".concat(r,\" and \").concat(u[2])}}t.push(u)}};return t};function cssWithMappingToString(n,t){var r=n[1]||\"\";var o=n[3];if(!o){return r}if(t&&typeof btoa===\"function\"){var e=toComment(o);var a=o.sources.map(function(n){return\"/*# sourceURL=\".concat(o.sourceRoot||\"\").concat(n,\" */\")});return[r].concat(a).concat([e]).join(\"\\n\")}return[r].join(\"\\n\")}function toComment(n){var t=btoa(unescape(encodeURIComponent(JSON.stringify(n))));var r=\"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(t);return\"/*# \".concat(r,\" */\")}}};var t={};function __nccwpck_require__(r){if(t[r]){return t[r].exports}var o=t[r]={exports:{}};var e=true;try{n[r](o,o.exports,__nccwpck_require__);e=false}finally{if(e)delete t[r]}return o.exports}__nccwpck_require__.ab=__dirname+\"/\";return __nccwpck_require__(762)}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9jc3MtbG9hZGVyL2FwaS5qcz82YmY4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSwwQkFBMEIsYUFBYSxPQUFPLGdCQUFnQixzQkFBc0IsU0FBUywrQkFBK0IsNEJBQTRCLGtDQUFrQyxTQUFTLCtCQUErQixjQUFjLEdBQUcsU0FBUyxZQUFZLG9CQUFvQix3QkFBd0IsZ0JBQWdCLFNBQVMsTUFBTSxZQUFZLGNBQWMsS0FBSyxpQkFBaUIsWUFBWSxZQUFZLFlBQVksV0FBVyxLQUFLLHNCQUFzQixlQUFlLFNBQVMsTUFBTSxVQUFVLE9BQU8sS0FBSyx3Q0FBd0MsWUFBWSxVQUFVLHFDQUFxQyxlQUFlLFdBQVcsT0FBTyxTQUFTLGdDQUFnQyxtQkFBbUIsZ0NBQWdDLGdFQUFnRSxFQUFFLDJDQUEyQyxxQkFBcUIsc0JBQXNCLDREQUE0RCw4Q0FBOEMsY0FBYyxtQkFBbUIsZ0NBQWdDLFNBQVMsZ0NBQWdDLFNBQVMsb0JBQW9CLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLHVCQUF1QixTQUFTLEtBQUssZ0NBQWdDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9jc3MtbG9hZGVyL2FwaS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzPWZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7dmFyIG49ezc2MjpmdW5jdGlvbihuKXtuLmV4cG9ydHM9ZnVuY3Rpb24obil7dmFyIHQ9W107dC50b1N0cmluZz1mdW5jdGlvbiB0b1N0cmluZygpe3JldHVybiB0aGlzLm1hcChmdW5jdGlvbih0KXt2YXIgcj1jc3NXaXRoTWFwcGluZ1RvU3RyaW5nKHQsbik7aWYodFsyXSl7cmV0dXJuXCJAbWVkaWEgXCIuY29uY2F0KHRbMl0sXCIge1wiKS5jb25jYXQocixcIn1cIil9cmV0dXJuIHJ9KS5qb2luKFwiXCIpfTt0Lmk9ZnVuY3Rpb24obixyLG8pe2lmKHR5cGVvZiBuPT09XCJzdHJpbmdcIil7bj1bW251bGwsbixcIlwiXV19dmFyIGU9e307aWYobyl7Zm9yKHZhciBhPTA7YTx0aGlzLmxlbmd0aDthKyspe3ZhciBjPXRoaXNbYV1bMF07aWYoYyE9bnVsbCl7ZVtjXT10cnVlfX19Zm9yKHZhciBpPTA7aTxuLmxlbmd0aDtpKyspe3ZhciB1PVtdLmNvbmNhdChuW2ldKTtpZihvJiZlW3VbMF1dKXtjb250aW51ZX1pZihyKXtpZighdVsyXSl7dVsyXT1yfWVsc2V7dVsyXT1cIlwiLmNvbmNhdChyLFwiIGFuZCBcIikuY29uY2F0KHVbMl0pfX10LnB1c2godSl9fTtyZXR1cm4gdH07ZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhuLHQpe3ZhciByPW5bMV18fFwiXCI7dmFyIG89blszXTtpZighbyl7cmV0dXJuIHJ9aWYodCYmdHlwZW9mIGJ0b2E9PT1cImZ1bmN0aW9uXCIpe3ZhciBlPXRvQ29tbWVudChvKTt2YXIgYT1vLnNvdXJjZXMubWFwKGZ1bmN0aW9uKG4pe3JldHVyblwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoby5zb3VyY2VSb290fHxcIlwiKS5jb25jYXQobixcIiAqL1wiKX0pO3JldHVybltyXS5jb25jYXQoYSkuY29uY2F0KFtlXSkuam9pbihcIlxcblwiKX1yZXR1cm5bcl0uam9pbihcIlxcblwiKX1mdW5jdGlvbiB0b0NvbW1lbnQobil7dmFyIHQ9YnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkobikpKSk7dmFyIHI9XCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQodCk7cmV0dXJuXCIvKiMgXCIuY29uY2F0KHIsXCIgKi9cIil9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXtpZih0W3JdKXtyZXR1cm4gdFtyXS5leHBvcnRzfXZhciBvPXRbcl09e2V4cG9ydHM6e319O3ZhciBlPXRydWU7dHJ5e25bcl0obyxvLmV4cG9ydHMsX19uY2N3cGNrX3JlcXVpcmVfXyk7ZT1mYWxzZX1maW5hbGx5e2lmKGUpZGVsZXRlIHRbcl19cmV0dXJuIG8uZXhwb3J0c31fX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjtyZXR1cm4gX19uY2N3cGNrX3JlcXVpcmVfXyg3NjIpfSgpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/css-loader/api.js\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[2].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[2].use[2]!./styles/Home.module.css":
/*!**********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[2].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[2].use[2]!./styles/Home.module.css ***!
  \**********************************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../node_modules/next/dist/compiled/css-loader/api.js */ \"./node_modules/next/dist/compiled/css-loader/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Home_container__1EcsU {\\n  min-height: 100vh;\\n  padding: 0 0.5rem;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100vh;\\n}\\n\\n  \\n\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://styles/Home.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,iBAAiB;EACjB,iBAAiB;EACjB,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,aAAa;AACf\",\"sourcesContent\":[\".container {\\n  min-height: 100vh;\\n  padding: 0 0.5rem;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100vh;\\n}\\n\\n  \\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"Home_container__1EcsU\"\n};\nmodule.exports = ___CSS_LOADER_EXPORT___;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3R5bGVzL0hvbWUubW9kdWxlLmNzcz8xMzkwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0Esa0NBQWtDLG1CQUFPLENBQUMsaUhBQXNEO0FBQ2hHO0FBQ0E7QUFDQSxrRUFBa0Usc0JBQXNCLHNCQUFzQixrQkFBa0IsMkJBQTJCLDRCQUE0Qix3QkFBd0Isa0JBQWtCLEdBQUcsaUJBQWlCLHVGQUF1RixZQUFZLGFBQWEsV0FBVyxZQUFZLGFBQWEsYUFBYSxXQUFXLHFDQUFxQyxzQkFBc0Isc0JBQXNCLGtCQUFrQiwyQkFBMkIsNEJBQTRCLHdCQUF3QixrQkFBa0IsR0FBRyw2QkFBNkI7QUFDcm9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL2Nzcy1sb2FkZXIvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzJdLnVzZVsxXSEuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcG9zdGNzcy1sb2FkZXIvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzJdLnVzZVsyXSEuL3N0eWxlcy9Ib21lLm1vZHVsZS5jc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvY3NzLWxvYWRlci9hcGkuanNcIik7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18odHJ1ZSk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuSG9tZV9jb250YWluZXJfXzFFY3NVIHtcXG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xcbiAgcGFkZGluZzogMCAwLjVyZW07XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGhlaWdodDogMTAwdmg7XFxufVxcblxcbiAgXFxuXFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovL3N0eWxlcy9Ib21lLm1vZHVsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxpQkFBaUI7RUFDakIsaUJBQWlCO0VBQ2pCLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixhQUFhO0FBQ2ZcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLmNvbnRhaW5lciB7XFxuICBtaW4taGVpZ2h0OiAxMDB2aDtcXG4gIHBhZGRpbmc6IDAgMC41cmVtO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBoZWlnaHQ6IDEwMHZoO1xcbn1cXG5cXG4gIFxcblxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ubG9jYWxzID0ge1xuXHRcImNvbnRhaW5lclwiOiBcIkhvbWVfY29udGFpbmVyX18xRWNzVVwiXG59O1xubW9kdWxlLmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/css-loader/cjs.js??ruleSet[1].rules[2].oneOf[2].use[1]!./node_modules/next/dist/compiled/postcss-loader/cjs.js??ruleSet[1].rules[2].oneOf[2].use[2]!./styles/Home.module.css\n");

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v17.0.2\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar _assign = __webpack_require__(/*! object-assign */ \"./node_modules/next/dist/build/polyfills/object-assign.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = 0xeac7;\nvar REACT_PORTAL_TYPE = 0xeaca;\nexports.Fragment = 0xeacb;\nvar REACT_STRICT_MODE_TYPE = 0xeacc;\nvar REACT_PROFILER_TYPE = 0xead2;\nvar REACT_PROVIDER_TYPE = 0xeacd;\nvar REACT_CONTEXT_TYPE = 0xeace;\nvar REACT_FORWARD_REF_TYPE = 0xead0;\nvar REACT_SUSPENSE_TYPE = 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = 0xead8;\nvar REACT_MEMO_TYPE = 0xead3;\nvar REACT_LAZY_TYPE = 0xead4;\nvar REACT_BLOCK_TYPE = 0xead9;\nvar REACT_SERVER_BLOCK_TYPE = 0xeada;\nvar REACT_FUNDAMENTAL_TYPE = 0xead5;\nvar REACT_SCOPE_TYPE = 0xead7;\nvar REACT_OPAQUE_ID_TYPE = 0xeae0;\nvar REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nvar REACT_OFFSCREEN_TYPE = 0xeae2;\nvar REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  var symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  exports.Fragment = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    printWarning('error', format, args);\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    }\n\n    var argsWithFormat = args.map(function (item) {\n      return '' + item;\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === exports.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n}\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case exports.Fragment:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type._render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentName(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: _assign({}, props, {\n          value: prevLog\n        }),\n        info: _assign({}, props, {\n          value: prevInfo\n        }),\n        warn: _assign({}, props, {\n          value: prevWarn\n        }),\n        error: _assign({}, props, {\n          value: prevError\n        }),\n        group: _assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: _assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: _assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_BLOCK_TYPE:\n        return describeFunctionComponentFrame(type._render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentName(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentName(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentName(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (Array.isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentName(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentName(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (Array.isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentName(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (Array.isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === exports.Fragment) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n");

/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v17.0.2\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar _assign = __webpack_require__(/*! object-assign */ \"./node_modules/next/dist/build/polyfills/object-assign.js\");\n\n// TODO: this is special because it gets imported during build.\nvar ReactVersion = '17.0.2';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = 0xeac7;\nvar REACT_PORTAL_TYPE = 0xeaca;\nexports.Fragment = 0xeacb;\nexports.StrictMode = 0xeacc;\nexports.Profiler = 0xead2;\nvar REACT_PROVIDER_TYPE = 0xeacd;\nvar REACT_CONTEXT_TYPE = 0xeace;\nvar REACT_FORWARD_REF_TYPE = 0xead0;\nexports.Suspense = 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = 0xead8;\nvar REACT_MEMO_TYPE = 0xead3;\nvar REACT_LAZY_TYPE = 0xead4;\nvar REACT_BLOCK_TYPE = 0xead9;\nvar REACT_SERVER_BLOCK_TYPE = 0xeada;\nvar REACT_FUNDAMENTAL_TYPE = 0xead5;\nvar REACT_SCOPE_TYPE = 0xead7;\nvar REACT_OPAQUE_ID_TYPE = 0xeae0;\nvar REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nvar REACT_OFFSCREEN_TYPE = 0xeae2;\nvar REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  var symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  exports.Fragment = symbolFor('react.fragment');\n  exports.StrictMode = symbolFor('react.strict_mode');\n  exports.Profiler = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  exports.Suspense = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_BLOCK_TYPE = symbolFor('react.block');\n  REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');\n  REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n}\n\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  transition: 0\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar ReactDebugCurrentFrame = {};\nvar currentExtraStackFrame = null;\nfunction setExtraStackFrame(stack) {\n  {\n    currentExtraStackFrame = stack;\n  }\n}\n\n{\n  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {\n    {\n      currentExtraStackFrame = stack;\n    }\n  }; // Stack implementation injected by the current renderer.\n\n\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentExtraStackFrame) {\n      stack += currentExtraStackFrame;\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\n/**\n * Used by act() to track whether you're inside an act() scope.\n */\nvar IsSomeRendererActing = {\n  current: false\n};\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner,\n  IsSomeRendererActing: IsSomeRendererActing,\n  // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n  assign: _assign\n};\n\n{\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    printWarning('warn', format, args);\n  }\n}\nfunction error(format) {\n  {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    printWarning('error', format, args);\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    }\n\n    var argsWithFormat = args.map(function (item) {\n      return '' + item;\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) {\n    {\n      throw Error( \"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\" );\n    }\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\n_assign(pureComponentPrototype, Component.prototype);\n\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n}\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case exports.Fragment:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case exports.Profiler:\n      return 'Profiler';\n\n    case exports.StrictMode:\n      return 'StrictMode';\n\n    case exports.Suspense:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type._render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentName(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n      var componentName = getComponentName(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (!!(element === null || element === undefined)) {\n    {\n      throw Error( \"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\" );\n    }\n  }\n\n  var propName; // Original props are copied\n\n  var props = _assign({}, element.props); // Reserved names are extracted\n\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = key.replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\n}\n/**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getElementKey(element, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof element === 'object' && element !== null && element.key != null) {\n    // Explicit key\n    return escape('' + element.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    var _child = children;\n    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows:\n\n    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n\n    if (Array.isArray(mappedChild)) {\n      var escapedChildKey = '';\n\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n\n      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {\n        return c;\n      });\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n        // traverseAllChildren used to do for objects as children\n        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);\n      }\n\n      array.push(mappedChild);\n    }\n\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n      var iterableChildren = children;\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === iterableChildren.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(iterableChildren);\n      var step;\n      var ii = 0;\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n      }\n    } else if (type === 'object') {\n      var childrenString = '' + children;\n\n      {\n        {\n          throw Error( \"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \"). If you meant to render a collection of children, use an array instead.\" );\n        }\n      }\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  var count = 0;\n  mapIntoArray(children, result, '', '', function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  var n = 0;\n  mapChildren(children, function () {\n    n++; // Don't return anything\n  });\n  return n;\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  mapChildren(children, function () {\n    forEachFunc.apply(this, arguments); // Don't return anything.\n  }, forEachContext);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  return mapChildren(children, function (child) {\n    return child;\n  }) || [];\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    {\n      throw Error( \"React.Children.only expected to receive a single React element child.\" );\n    }\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue, calculateChangedBits) {\n  if (calculateChangedBits === undefined) {\n    calculateChangedBits = null;\n  } else {\n    {\n      if (calculateChangedBits !== null && typeof calculateChangedBits !== 'function') {\n        error('createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits);\n      }\n    }\n  }\n\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _calculateChangedBits: calculateChangedBits,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n  var hasWarnedAboutDisplayNameOnConsumer = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context,\n      _calculateChangedBits: context._calculateChangedBits\n    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n\n            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n\n            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n\n          return context.Consumer;\n        }\n      },\n      displayName: {\n        get: function () {\n          return context.displayName;\n        },\n        set: function (displayName) {\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\n            warn('Setting `displayName` on Context.Consumer has no effect. ' + \"You should set it directly on the context with Context.displayName = '%s'.\", displayName);\n\n            hasWarnedAboutDisplayNameOnConsumer = true;\n          }\n        }\n      }\n    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nvar Uninitialized = -1;\nvar Pending = 0;\nvar Resolved = 1;\nvar Rejected = 2;\n\nfunction lazyInitializer(payload) {\n  if (payload._status === Uninitialized) {\n    var ctor = payload._result;\n    var thenable = ctor(); // Transition to the next state.\n\n    var pending = payload;\n    pending._status = Pending;\n    pending._result = thenable;\n    thenable.then(function (moduleObject) {\n      if (payload._status === Pending) {\n        var defaultExport = moduleObject.default;\n\n        {\n          if (defaultExport === undefined) {\n            error('lazy: Expected the result of a dynamic import() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\", moduleObject);\n          }\n        } // Transition to the next state.\n\n\n        var resolved = payload;\n        resolved._status = Resolved;\n        resolved._result = defaultExport;\n      }\n    }, function (error) {\n      if (payload._status === Pending) {\n        // Transition to the next state.\n        var rejected = payload;\n        rejected._status = Rejected;\n        rejected._result = error;\n      }\n    });\n  }\n\n  if (payload._status === Resolved) {\n    return payload._result;\n  } else {\n    throw payload._result;\n  }\n}\n\nfunction lazy(ctor) {\n  var payload = {\n    // We use these fields to store the result.\n    _status: -1,\n    _result: ctor\n  };\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: payload,\n    _init: lazyInitializer\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes; // $FlowFixMe\n\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name;\n\n        if (render.displayName == null) {\n          render.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\n// Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === exports.Fragment || type === exports.Profiler || type === REACT_DEBUG_TRACING_MODE_TYPE || type === exports.StrictMode || type === exports.Suspense || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name;\n\n        if (type.displayName == null) {\n          type.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n\n  if (!(dispatcher !== null)) {\n    {\n      throw Error( \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\" );\n    }\n  }\n\n  return dispatcher;\n}\n\nfunction useContext(Context, unstable_observedBits) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    if (unstable_observedBits !== undefined) {\n      error('useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\\n\\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://reactjs.org/link/rules-of-hooks' : '');\n    } // TODO: add a more generic warning for invalid values.\n\n\n    if (Context._context !== undefined) {\n      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context, unstable_observedBits);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: _assign({}, props, {\n          value: prevLog\n        }),\n        info: _assign({}, props, {\n          value: prevInfo\n        }),\n        warn: _assign({}, props, {\n          value: prevWarn\n        }),\n        error: _assign({}, props, {\n          value: prevError\n        }),\n        group: _assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: _assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: _assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher$1.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher$1.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case exports.Suspense:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_BLOCK_TYPE:\n        return describeFunctionComponentFrame(type._render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      setExtraStackFrame(stack);\n    } else {\n      setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentName(ReactCurrentOwner.current.type);\n\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n    if (parentName) {\n      info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n    }\n  }\n\n  return info;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwner = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = \" It was passed a child from \" + getComponentName(element._owner.type) + \".\";\n  }\n\n  {\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentName(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentName(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n\n  if (!validType) {\n    var info = '';\n\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString;\n\n    if (type === null) {\n      typeString = 'null';\n    } else if (Array.isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = \"<\" + (getComponentName(type.type) || 'Unknown') + \" />\";\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    {\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n  }\n\n  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n\n  if (element == null) {\n    return element;\n  } // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === exports.Fragment) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n\n  validatePropTypes(newElement);\n  return newElement;\n}\n\n{\n\n  try {\n    var frozenObject = Object.freeze({});\n    /* eslint-disable no-new */\n\n    new Map([[frozenObject, null]]);\n    new Set([frozenObject]);\n    /* eslint-enable no-new */\n  } catch (e) {\n  }\n}\n\nvar createElement$1 =  createElementWithValidation ;\nvar cloneElement$1 =  cloneElementWithValidation ;\nvar createFactory =  createFactoryWithValidation ;\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.PureComponent = PureComponent;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.cloneElement = cloneElement$1;\nexports.createContext = createContext;\nexports.createElement = createElement$1;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useEffect = useEffect;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.version = ReactVersion;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react.development.js\n");

/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ \"./node_modules/react/cjs/react.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzP2FiNWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDO0FBQ0QsRUFBRSx1SEFBc0Q7QUFDeEQiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/index.js\n");

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz85MjBlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQztBQUNELEVBQUUsdUpBQXNFO0FBQ3hFIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ // runtime can't be in strict mode because a global variable is assign and maybe created.
/******/ 
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ var __webpack_exports__ = (__webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2FUsers%2Fdiegoacuna%2FDocuments%2Fcustom-spain-map%2Fpages%2Findex.js!"));
/******/ _N_E = __webpack_exports__;
/******/ }
]);